{
  "remoteServiceBindings": {
    "remoteService": {
      "name": "remoteService",
      "sourceName": "remoteService",
      "enableQueue": true,
      "timeout": 0
    }
  },
  "valueStream": "",
  "aspects": {
    "isExtension": true
  },
  "designTimePermissions": {
    "Read": [],
    "Delete": [],
    "Create": [],
    "Metadata": [],
    "Update": []
  },
  "description": "This example file shows how to define a Thing using TypeScript.\n\nA Thing is identified via the `@ThingDefinition` decorator.\nAdditional aspects are also specified via decorators:\n- `@published`:                                   Marks the thing as published via federation\n- `@valueStream(\"MyValueStream\")`:                Assigns a value stream\n- `@editable`:                                    Makes this entity editable in composer\n\nA Thing must extend from one of the thing shape classes. \nIf thing shapes must be applied then the superclass changes into `ThingTemplateWithShapes(template, ...)`, where\n- The first parameter represents the name of the base thing template\n- One or more subsequent parameters are each the name of a thing shape that the thing will implement",
  "effectiveAlertConfiguration": {},
  "thingTemplate": "RemoteThing",
  "effectiveShape": {
    "propertyDefinitions": {
      "myProperty": {
        "sourceType": "Unknown",
        "name": "myProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": "This is the default value",
          "isPersistent": true,
          "isLogged": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Thing properties are specified as regular class properties.\nNote that a type annotation is required and can be one of the standard\nTypescript types or Thingworx base types (e.g. `STRING` instead of `string`).\n\nAspects such as `persistent` and `logged` are specified as decorators.\nThe `readonly` aspect is specified via the regular `readonly` keyword.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "numberProperty": {
        "sourceType": "Unknown",
        "name": "numberProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "isPersistent": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "For certain types, it is possible to use the standard TypeScript type\nnames such as `number`, `string`, `boolean` and `Date` and they will be\nconverted into the appropriate Thingworx type.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "cardType": {
        "sourceType": "Unknown",
        "name": "cardType",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": "Clubs",
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "We can constrain strings to enum values on the compiler side. The ThingWorx type\n(ie. `STRING` not `string`) must be used when constraining properties like this.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "isConnected": {
        "sourceType": "ThingShape",
        "name": "isConnected",
        "aspects": {
          "isReadOnly": true,
          "defaultValue": false,
          "isPersistent": false
        },
        "isLocalOnly": true,
        "description": "Flag indicating if connected or not",
        "sourceName": "Connectable",
        "category": "ConnectionStatus",
        "baseType": "BOOLEAN",
        "ordinal": 0
      },
      "description": {
        "sourceType": "ThingPackage",
        "name": "description",
        "aspects": {
          "isReadOnly": true,
          "isPersistent": false,
          "isBuiltIn": true
        },
        "isLocalOnly": true,
        "description": "Thing description",
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "baseType": "STRING",
        "ordinal": 0
      },
      "isReporting": {
        "sourceType": "ThingShape",
        "name": "isReporting",
        "aspects": {
          "isReadOnly": true,
          "defaultValue": false,
          "isPersistent": false
        },
        "isLocalOnly": false,
        "description": "Health of this device's connection",
        "sourceName": "Reportable",
        "category": "ConnectionStatus",
        "baseType": "BOOLEAN",
        "ordinal": 0
      },
      "thingTemplate": {
        "sourceType": "ThingPackage",
        "name": "thingTemplate",
        "aspects": {
          "isReadOnly": true,
          "isPersistent": false,
          "isBuiltIn": true
        },
        "isLocalOnly": true,
        "description": "Thing Template",
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "baseType": "THINGTEMPLATENAME",
        "ordinal": 0
      },
      "lastConnection": {
        "sourceType": "ThingShape",
        "name": "lastConnection",
        "aspects": {
          "isReadOnly": true,
          "defaultValue": 0,
          "isPersistent": true
        },
        "isLocalOnly": true,
        "description": "Last connection time",
        "sourceName": "Connectable",
        "category": "ConnectionStatus",
        "baseType": "DATETIME",
        "ordinal": 0
      },
      "reportingLastChange": {
        "sourceType": "ThingShape",
        "name": "reportingLastChange",
        "aspects": {
          "isReadOnly": true,
          "defaultValue": 0,
          "isPersistent": true
        },
        "isLocalOnly": false,
        "description": "Last time isReporting value changed",
        "sourceName": "Reportable",
        "category": "ConnectionStatus",
        "baseType": "DATETIME",
        "ordinal": 0
      },
      "streamToUse": {
        "sourceType": "Unknown",
        "name": "streamToUse",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "dataChangeType": "ALWAYS",
          "thingTemplate": "Stream",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "The data change type is specified via the `@dataChangeType(type)` decorator.\n\nNote that some base types are generics in TypeScript. THINGNAME is such as a base type; it takes two type arguments:\n - The first argument is the thing template name or `undefined`. If specified, this must be a string literal or the `undefined` keyword.\n - The second argument is the thing shape name or `undefined`. If specified, this must be a string literal or the `undefined` keyword.",
        "sourceName": "",
        "category": "",
        "baseType": "THINGNAME",
        "ordinal": 0
      },
      "tags": {
        "sourceType": "ThingPackage",
        "name": "tags",
        "aspects": {
          "isReadOnly": true,
          "isPersistent": false,
          "tagType": "ModelTags",
          "isBuiltIn": true
        },
        "isLocalOnly": true,
        "description": "Thing Tags",
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "baseType": "TAGS",
        "ordinal": 0
      },
      "remotelyBoundProperty": {
        "sourceType": "Unknown",
        "name": "remotelyBoundProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "isRemote": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Remotely bound properties are specified via the \n`@remote(name, {cacheTime?, pushType?, pushThreshold?, startType?,foldType?, imeout?})` decorator. From this decorator only\nthe first parameter is required. It represents the name of the remote property.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "reportingLastEvaluation": {
        "sourceType": "ThingShape",
        "name": "reportingLastEvaluation",
        "aspects": {
          "isReadOnly": true,
          "defaultValue": 0,
          "isPersistent": true
        },
        "isLocalOnly": false,
        "description": "Last time evaluated for Reporting",
        "sourceName": "Reportable",
        "category": "ConnectionStatus",
        "baseType": "DATETIME",
        "ordinal": 0
      },
      "bytes": {
        "sourceType": "Unknown",
        "name": "bytes",
        "aspects": {
          "minimumValue": 32.0,
          "dataChangeThreshold": 0.0,
          "dataChangeType": "VALUE",
          "units": "bytes",
          "maximumValue": 64.0,
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Numeric properties can use some specific decorators such as `minimumValue`, `maximumValue` and `unit`.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "locallyBoundProperty": {
        "sourceType": "Unknown",
        "name": "locallyBoundProperty",
        "aspects": {
          "isReadOnly": true,
          "dataChangeThreshold": 0.0,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Properties that don't have a default value must be implicitly unwrapped.\n\nLocal bindings are specified using the `@local(source, sourceProperty)` decorator, where:\n - The first parameter is the name of the source thing.\n - The second parameter is the name of the property to bind to.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "name": {
        "sourceType": "ThingPackage",
        "name": "name",
        "aspects": {
          "isReadOnly": true,
          "isPersistent": false,
          "isBuiltIn": true
        },
        "isLocalOnly": true,
        "description": "Thing name",
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "baseType": "STRING",
        "ordinal": 0
      },
      "status": {
        "sourceType": "Unknown",
        "name": "status",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": 2.0,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Number types can be constrained in the same way as strings. The ThingWorx type\n(ie. `NUMBER` not `number`) must be used when constraining properties like this.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      }
    },
    "subscriptions": {
      "streamToUseChanged": {
        "sourceType": "Thing",
        "alertName": "",
        "name": "streamToUseChanged",
        "sourceProperty": "streamToUse",
        "serviceImplementation": {
          "name": "streamToUseChanged",
          "description": "",
          "handlerName": "Script",
          "configurationTables": {
            "Script": {
              "isMultiRow": false,
              "name": "Script",
              "description": "Script",
              "rows": [
                {
                  "code": "\n    var table = Resources.InfoTableFunctions.CreateInfoTableFromDataShape({ dataShapeName: 'LinkedList' });\n    table.AddRow({ name: 'EntityCount' });\n    var table2 = Resources.InfoTableFunctions.Clone({ t1: table });\n    logger.info(\"Name is \".concat(table2.name));\n"
                }
              ],
              "dataShapeName": "",
              "ordinal": 0,
              "dataShape": {
                "fieldDefinitions": {
                  "code": {
                    "name": "code",
                    "aspects": {},
                    "description": "code",
                    "baseType": "STRING",
                    "ordinal": 0
                  }
                }
              }
            }
          }
        },
        "aspects": {},
        "description": "The `@localSubscription(event[, property])` decorator is used to create subscription to an entity's own events.",
        "eventName": "DataChange",
        "source": "",
        "trigger": "",
        "enabled": true
      },
      "auditDataTableThingTemplateChanged": {
        "sourceType": "Thing",
        "alertName": "",
        "name": "auditDataTableThingTemplateChanged",
        "sourceProperty": "thingTemplate",
        "serviceImplementation": {
          "name": "auditDataTableThingTemplateChanged",
          "description": "",
          "handlerName": "Script",
          "configurationTables": {
            "Script": {
              "isMultiRow": false,
              "name": "Script",
              "description": "Script",
              "rows": [
                {
                  "code": "\n    // Const enums will be fully erased in thingworx\n    // This condition will be compiled as this.status == 0\n    if (me.status == 0) {\n        logger.debug('Thing is running');\n    }\n"
                }
              ],
              "dataShapeName": "",
              "ordinal": 0,
              "dataShape": {
                "fieldDefinitions": {
                  "code": {
                    "name": "code",
                    "aspects": {},
                    "description": "code",
                    "baseType": "STRING",
                    "ordinal": 0
                  }
                }
              }
            }
          }
        },
        "aspects": {},
        "description": "The `@subscription(name, event[, property])` decorator is used to create subscriptions to other entities' events.\n\nNote that in this case, the name of the parameters used by this method cannot be changed or it will lead to runtime errors.",
        "eventName": "DataChange",
        "source": "AuditDataTable",
        "trigger": "",
        "enabled": true
      }
    },
    "eventDefinitions": {
      "AnyAlertAck": {
        "sourceType": "ThingPackage",
        "name": "AnyAlertAck",
        "aspects": {},
        "description": "Alert acknowledge event for any property",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      },
      "AnyDataChange": {
        "sourceType": "ThingPackage",
        "name": "AnyDataChange",
        "aspects": {},
        "description": "Data change event for any property",
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "dataShape": "AnyDataChangeEvent"
      },
      "AnyAlertReset": {
        "sourceType": "ThingPackage",
        "name": "AnyAlertReset",
        "aspects": {},
        "description": "Alert reset event for any property",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      },
      "DataChange": {
        "sourceType": "ThingPackage",
        "name": "DataChange",
        "aspects": {},
        "description": "Data change event",
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "dataShape": "DataChangeEvent"
      },
      "HistoricalDataLogged": {
        "sourceType": "ThingPackage",
        "name": "HistoricalDataLogged",
        "aspects": {},
        "description": "Historical Data Logged event",
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "dataShape": "HistoricalDataLoggedEvent"
      },
      "AnyAlert": {
        "sourceType": "ThingPackage",
        "name": "AnyAlert",
        "aspects": {},
        "description": "Alert event for any property",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      },
      "AnyAnomalyMonitorStatus": {
        "sourceType": "ThingPackage",
        "name": "AnyAnomalyMonitorStatus",
        "aspects": {},
        "description": "Anomaly Monitor Status event for any property",
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "dataShape": "AnyAnomalyMonitorStatusEvent"
      },
      "ThingStart": {
        "sourceType": "ThingPackage",
        "name": "ThingStart",
        "aspects": {
          "auditMessageKey": "com.thingworx.things.Thing.ThingStart.Audit",
          "auditCategoryKey": "audit.AuditCategory.Lifecycle"
        },
        "description": "Thing start event",
        "sourceName": "ConfiguredThing",
        "category": "Lifecycle",
        "dataShape": "ThingStartEvent"
      },
      "AlertAck": {
        "sourceType": "ThingPackage",
        "name": "AlertAck",
        "aspects": {},
        "description": "Alert acknowledge event",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      },
      "remoteEvent": {
        "sourceType": "Unknown",
        "name": "remoteEvent",
        "aspects": {},
        "description": "Remote events are specified via the `@remoteEvent(name)` decorator.",
        "sourceName": "",
        "category": "",
        "dataShape": "GenericStringList"
      },
      "AnomalyMonitorStatus": {
        "sourceType": "ThingPackage",
        "name": "AnomalyMonitorStatus",
        "aspects": {},
        "description": "Anomaly Monitor Status",
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "dataShape": "AnomalyMonitorStatusEvent"
      },
      "AlertReset": {
        "sourceType": "ThingPackage",
        "name": "AlertReset",
        "aspects": {},
        "description": "Alert reset event",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      },
      "customEvent": {
        "sourceType": "Unknown",
        "name": "customEvent",
        "aspects": {},
        "description": "Events are just properties with the custom `EVENT` base type. The data shape to use is specified as\na type argument.",
        "sourceName": "",
        "category": "",
        "dataShape": "GenericStringList"
      },
      "Alert": {
        "sourceType": "ThingPackage",
        "name": "Alert",
        "aspects": {},
        "description": "Alert event",
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "dataShape": "AlertEvent"
      }
    },
    "serviceImplementations": {
      "SetLocalPropertyBinding": {
        "name": "SetLocalPropertyBinding",
        "description": "Set the property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetBooleanPropertyValue": {
        "name": "GetBooleanPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDesignTimePermissions": {
        "name": "GetDesignTimePermissions",
        "description": "Get a list of assigned design time permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetValueStream": {
        "name": "GetValueStream",
        "description": "Get the identifier for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetMultiRowConfigurationTable": {
        "name": "SetMultiRowConfigurationTable",
        "description": "Set an entire multi-row configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddNumberValueStreamEntry": {
        "name": "AddNumberValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryVec2PropertyHistory": {
        "name": "QueryVec2PropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddEventDefinition": {
        "name": "AddEventDefinition",
        "description": "Add or update an event definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetVisibilityPermissions": {
        "name": "GetVisibilityPermissions",
        "description": "Get a list of assigned visibility permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "PurgeAllPropertyHistory": {
        "name": "PurgeAllPropertyHistory",
        "description": "Purge all value stream entries for a specified date range",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddLocationValueStreamEntry": {
        "name": "AddLocationValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddVec3ValueStreamEntry": {
        "name": "AddVec3ValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRunTimePermissions": {
        "name": "GetRunTimePermissions",
        "description": "Get a list of assigned runtime permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetVec3PropertyValue": {
        "name": "GetVec3PropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetMetadataAsJSON": {
        "name": "GetMetadataAsJSON",
        "description": "Get the metadata in JSON format",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveRemoteServiceBinding": {
        "name": "RemoveRemoteServiceBinding",
        "description": "Remove the remote service binding for a service",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetThingSummaryInformation": {
        "name": "GetThingSummaryInformation",
        "description": "Get thing summary information",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertDefinitions": {
        "name": "GetAlertDefinitions",
        "description": "Get effective alert definitions for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckPermissionForUser": {
        "name": "CheckPermissionForUser",
        "description": "Check to see if an entity has a specific run time permission for a specific user",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AcknowledgeAllAlerts": {
        "name": "AcknowledgeAllAlerts",
        "description": "Acknowledge all active alerts",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetImagePropertyValue": {
        "name": "GetImagePropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetPublished": {
        "name": "SetPublished",
        "description": "Set this as a published thing for federation",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetOutgoingDependencies": {
        "name": "GetOutgoingDependencies",
        "description": "Get the outgoing dependencies",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryStringPropertyHistory": {
        "name": "QueryStringPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "asyncService": {
        "name": "asyncService",
        "description": "",
        "handlerName": "Script",
        "configurationTables": {
          "Script": {
            "isMultiRow": false,
            "name": "Script",
            "description": "Script",
            "rows": [
              {
                "code": "var result = (function () {\n    // `this` should be used in place of `me`, unlike in thingworx\n    // it will be compiled into `me`\n    var x = Things[me.streamToUse];\n    // Constrained strings will cause a compiler error whenever anything other than\n    // an enum constant is assigned to it\n    me.cardType = \"Clubs\";\n    // The numeric or string literal can be used directly instead of the enum member\n    me.status = 2;\n    me.streamToUse = 'AnomalyMonitorStateStream';\n    var data = x.QueryStreamEntriesWithData();\n    var y = Things.DownloadedSolutions;\n    y.AnyAlertAck();\n    me.customEvent({ item: 'test' });\n    me.asyncService({ stringParameter: 'test' });\n})()"
              }
            ],
            "dataShapeName": "",
            "ordinal": 0,
            "dataShape": {
              "fieldDefinitions": {
                "code": {
                  "name": "code",
                  "aspects": {},
                  "description": "code",
                  "baseType": "STRING",
                  "ordinal": 0
                }
              }
            }
          }
        }
      },
      "GetAlertStatuses": {
        "name": "GetAlertStatuses",
        "description": "Get the Statuses of the given Alerts",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPublished": {
        "name": "GetPublished",
        "description": "Get published thing for federation",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "EnableAllAlerts": {
        "name": "EnableAllAlerts",
        "description": "Enable all alerts for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryBooleanPropertyHistory": {
        "name": "QueryBooleanPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddRunTimePermission": {
        "name": "AddRunTimePermission",
        "description": "Add a run time permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "IsMultiRowTable": {
        "name": "IsMultiRowTable",
        "description": "Check if a configuration table is a multi-row table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveRemotePropertyBinding": {
        "name": "RemoveRemotePropertyBinding",
        "description": "Remove the remote property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEffectivePropertyLogging": {
        "name": "GetEffectivePropertyLogging",
        "description": "Get the logging status of a specific property from the effective Thing shape",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetProjectName": {
        "name": "GetProjectName",
        "description": "Get the project name of this entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetImplementedShapes": {
        "name": "GetImplementedShapes",
        "description": "Get the implemented thing shapes for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetThingCodePropertyValue": {
        "name": "GetThingCodePropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "UpdatePropertyValues": {
        "name": "UpdatePropertyValues",
        "description": "Write property values for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddDynamicRemoteSubscription": {
        "name": "AddDynamicRemoteSubscription",
        "description": "Add a dynamic remote subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteAllConfigurationTableRows": {
        "name": "DeleteAllConfigurationTableRows",
        "description": "Delete all rows from a multi-row configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddServiceDefinition": {
        "name": "AddServiceDefinition",
        "description": "Add or update a service definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckDesignTimePermissionForGroup": {
        "name": "CheckDesignTimePermissionForGroup",
        "description": "Check to see if an entity has a specific design time permission for a specific group",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddOrUpdateAlert": {
        "name": "AddOrUpdateAlert",
        "description": "Add or update an alert for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryAlertHistory": {
        "name": "QueryAlertHistory",
        "description": "Query the alert history",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckDesignTimePermissionForUser": {
        "name": "CheckDesignTimePermissionForUser",
        "description": "Check to see if an entity has a specific design time permission for a specific user",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDifferencesAsJSON": {
        "name": "GetDifferencesAsJSON",
        "description": "Get the difference between this entity and another",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SendQueuedTasks": {
        "name": "SendQueuedTasks",
        "description": "Sends any queued tasks to the connected thing.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddPropertyDefinitions": {
        "name": "AddPropertyDefinitions",
        "description": "Add multiple property definitions at once",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DisableAlertsForProperty": {
        "name": "DisableAlertsForProperty",
        "description": "Disable alert(s) for a property. Specify alertName for a specific property alert; otherwise, all alerts are disabled.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "IsEnabled": {
        "name": "IsEnabled",
        "description": "Get Enabled Status",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "ImplementsShape": {
        "name": "ImplementsShape",
        "description": "Check to see if a thing implements a particular thing shape",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyValuesVTQ": {
        "name": "GetPropertyValuesVTQ",
        "description": "Get the current property values for this thing as VTQ",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveDynamicRemoteSubscription": {
        "name": "RemoveDynamicRemoteSubscription",
        "description": "Remove a dynamic remote subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetPropertyLogging": {
        "name": "SetPropertyLogging",
        "description": "Set property logging status for a specific property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDifferences": {
        "name": "GetDifferences",
        "description": "Get the difference between this entity and another",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddLongValueStreamEntry": {
        "name": "AddLongValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetUnitsForNumericPropertyDefinition": {
        "name": "SetUnitsForNumericPropertyDefinition",
        "description": "Set the additional information for units for a specific Long, Integer, or Number property.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddConfigurationTableDefinition": {
        "name": "AddConfigurationTableDefinition",
        "description": "Adds a ConfigurationTableDefinition and creates and ConfigurationTable from the definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNumericLoggedProperties": {
        "name": "GetNumericLoggedProperties",
        "description": "Get a list of logged properties for this thing that are of a numeric data type",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNamedProperties": {
        "name": "GetNamedProperties",
        "description": "Gets the current values of the specified properties.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEditUserName": {
        "name": "GetEditUserName",
        "description": "Get the last user who requested edit for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetRemotePropertyBinding": {
        "name": "SetRemotePropertyBinding",
        "description": "Set the remote property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEventDefinition": {
        "name": "GetEventDefinition",
        "description": "Get ann event definitions for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RestartThing": {
        "name": "RestartThing",
        "description": "Restart this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetIntegerAlertParameter": {
        "name": "SetIntegerAlertParameter",
        "description": "Set a numeric alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRemoteMetadata": {
        "name": "GetRemoteMetadata",
        "description": "Return the metadata for the connected thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddPropertyDefinition": {
        "name": "AddPropertyDefinition",
        "description": "Add a property definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDateTimeAlertParameter": {
        "name": "GetDateTimeAlertParameter",
        "description": "Get a date alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetConfigurationTable": {
        "name": "SetConfigurationTable",
        "description": "Set an entire configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "IsInNetwork": {
        "name": "IsInNetwork",
        "description": "Check to see if a thing is in a specific network",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveDynamicSubscription": {
        "name": "RemoveDynamicSubscription",
        "description": "Remove a dynamic subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryAuditHistory": {
        "name": "QueryAuditHistory",
        "description": "Query the historical audit entries for this Thing only",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveTags": {
        "name": "RemoveTags",
        "description": "Remove tags from an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNumberPropertyValue": {
        "name": "GetNumberPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAvatar": {
        "name": "GetAvatar",
        "description": "Get avatar image",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLoggedProperties": {
        "name": "GetLoggedProperties",
        "description": "Get a list of logged properties for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "EnableThing": {
        "name": "EnableThing",
        "description": "Enable this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEditDate": {
        "name": "GetEditDate",
        "description": "Get the date edit was requested for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CancelEdit": {
        "name": "CancelEdit",
        "description": "Cancel editing mode for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetServiceDefinition": {
        "name": "GetServiceDefinition",
        "description": "Get a service definition for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetConfigurationChangeHistory": {
        "name": "GetConfigurationChangeHistory",
        "description": "Get the configuration change history",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteRunTimePermission": {
        "name": "DeleteRunTimePermission",
        "description": "Delete a run time permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetConfigurationTableRow": {
        "name": "GetConfigurationTableRow",
        "description": "Get a specific configuration table row as an InfoTable",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetStringPropertyValue": {
        "name": "GetStringPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "EvaluateReporting": {
        "name": "EvaluateReporting",
        "description": "Evaluates this Thing's Reporting status based on its strategy",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetInstanceMetadataAsJSON": {
        "name": "GetInstanceMetadataAsJSON",
        "description": "Get the instance metadata in JSON format",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SaveConfigurationTables": {
        "name": "SaveConfigurationTables",
        "description": "Save any changes to configuration tables",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AcknowledgeAlert": {
        "name": "AcknowledgeAlert",
        "description": "Acknowledge an active alert",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryLocationPropertyHistory": {
        "name": "QueryLocationPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryVec4PropertyHistory": {
        "name": "QueryVec4PropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetRemoteServiceBinding": {
        "name": "SetRemoteServiceBinding",
        "description": "Set the remote service binding for a service",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteValueStreamEntry": {
        "name": "DeleteValueStreamEntry",
        "description": "Delete a specific stream entry given a stream entry ID",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "IsDerivedFromTemplate": {
        "name": "IsDerivedFromTemplate",
        "description": "Check to see if a thing is derived from a particular thing template",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "WritePropertiesToStream": {
        "name": "WritePropertiesToStream",
        "description": "Store properties of this thing to a stream",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetThingRelationships": {
        "name": "GetThingRelationships",
        "description": "Return a list of all the things referenced by this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "IsDynamicSubscriptionCreated": {
        "name": "IsDynamicSubscriptionCreated",
        "description": "Returns true if given dynamic subscription is present",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetConfigurationTables": {
        "name": "GetConfigurationTables",
        "description": "Get a list of configuration tables",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddVec4ValueStreamEntry": {
        "name": "AddVec4ValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddDateTimeValueStreamEntry": {
        "name": "AddDateTimeValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetServiceDefinitions": {
        "name": "GetServiceDefinitions",
        "description": "Get the current service definitions for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "PurgeSelectedPropertyHistory": {
        "name": "PurgeSelectedPropertyHistory",
        "description": "Purge all value stream entries for a specified date range for a given list of properties",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetHomeMashup": {
        "name": "SetHomeMashup",
        "description": "Set home mashup",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetOwner": {
        "name": "SetOwner",
        "description": "Assign an owner to this entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryNumberPropertyHistory": {
        "name": "QueryNumberPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetNumberAlertParameter": {
        "name": "SetNumberAlertParameter",
        "description": "Set a numeric alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetHomeMashup": {
        "name": "GetHomeMashup",
        "description": "Get home mashup",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetTags": {
        "name": "GetTags",
        "description": "Get the tags for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertStatus": {
        "name": "GetAlertStatus",
        "description": "Get the Status of the given Alert",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetBooleanAlertParameter": {
        "name": "SetBooleanAlertParameter",
        "description": "Set a boolean alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNetworks": {
        "name": "GetNetworks",
        "description": "Get the networks associated with a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteConfigurationTable": {
        "name": "DeleteConfigurationTable",
        "description": "Delete an entire configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPermissionsForCurrentUser": {
        "name": "GetPermissionsForCurrentUser",
        "description": "Get current user permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetTagsAsInfoTable": {
        "name": "GetTagsAsInfoTable",
        "description": "Get the tags for an entity as an InfoTable",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckDesignTimePermission": {
        "name": "CheckDesignTimePermission",
        "description": "Check to see if an entity has a specific design time permission for the current user",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetConfigurationTableDefinition": {
        "name": "GetConfigurationTableDefinition",
        "description": "Get a specific configuration table definition as an InfoTable",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryPropertyHistory": {
        "name": "QueryPropertyHistory",
        "description": "Queries the value stream entries for logged property value along with filter and sort criteria and normalizes the data set to display result for a given time range",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetVec2PropertyValue": {
        "name": "GetVec2PropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryLongPropertyHistory": {
        "name": "QueryLongPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveLocalPropertyBinding": {
        "name": "RemoveLocalPropertyBinding",
        "description": "Remove the local property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetDesignTimePermissionsAsJSON": {
        "name": "SetDesignTimePermissionsAsJSON",
        "description": "Set a list of assigned design time permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "HasOutgoingDependencies": {
        "name": "HasOutgoingDependencies",
        "description": "Has outgoing dependencies",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRemoteEventBinding": {
        "name": "GetRemoteEventBinding",
        "description": "Get the remote event binding for a event",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPermissionsForGroup": {
        "name": "GetPermissionsForGroup",
        "description": "Get group permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddIntegerValueStreamEntry": {
        "name": "AddIntegerValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRemotePropertyBinding": {
        "name": "GetRemotePropertyBinding",
        "description": "Get the remote property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetMetadataWithPermissionsAsJSON": {
        "name": "GetMetadataWithPermissionsAsJSON",
        "description": "Get the metadata in JSON format",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetTags": {
        "name": "SetTags",
        "description": "Overwrite/set the tags for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIncomingDependencies": {
        "name": "GetIncomingDependencies",
        "description": "Get the incoming dependencies",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetMetadata": {
        "name": "GetMetadata",
        "description": "Get the metadata in InfoTable format",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLocallyImplementedShapes": {
        "name": "GetLocallyImplementedShapes",
        "description": "Get the locally implemented thing shapes for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RequestEdit": {
        "name": "RequestEdit",
        "description": "Request editing mode for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "PromoteAlert": {
        "name": "PromoteAlert",
        "description": "Promote an overridden alert to the nearest parent in its heirarchy that defines it.  Currently only Anomaly type Alerts are supported.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddTags": {
        "name": "AddTags",
        "description": "Append additional tags to an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPermissionsForUser": {
        "name": "GetPermissionsForUser",
        "description": "Get user permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddBooleanValueStreamEntry": {
        "name": "AddBooleanValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNamedPropertyValues": {
        "name": "GetNamedPropertyValues",
        "description": "Gets the current values of the specified properties.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckPermissionForGroup": {
        "name": "CheckPermissionForGroup",
        "description": "Check to see if an entity has a specific run time permission for a specific group",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDesignTimePermissionsAsJSON": {
        "name": "GetDesignTimePermissionsAsJSON",
        "description": "Get a list of assigned designtime permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetIdentifier": {
        "name": "SetIdentifier",
        "description": "Set the identifier for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "ForceEdit": {
        "name": "ForceEdit",
        "description": "Force editing mode for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDateTimePropertyValue": {
        "name": "GetDateTimePropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DisableSubscription": {
        "name": "DisableSubscription",
        "description": "Disable Subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAnomalyAlertTrainingStatisticsForAlert": {
        "name": "GetAnomalyAlertTrainingStatisticsForAlert",
        "description": "Get Training Statistics for given Alert",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "HavePropertiesChangedSince": {
        "name": "HavePropertiesChangedSince",
        "description": "Has any property changed since a given time",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetQueuedTasks": {
        "name": "GetQueuedTasks",
        "description": "Retrieve any tasks for this connected thing.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIdentifier": {
        "name": "GetIdentifier",
        "description": "Get the identifier for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryImagePropertyHistory": {
        "name": "QueryImagePropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetVisibilityPermissionsAsJSON": {
        "name": "SetVisibilityPermissionsAsJSON",
        "description": "Set a list of assigned visibility permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertDefinition": {
        "name": "GetAlertDefinition",
        "description": "Get alert definition for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetThingGroupDelegatedVisibilityPermissions": {
        "name": "GetThingGroupDelegatedVisibilityPermissions",
        "description": "Get the Visibility permissions from all the ThingGroups where this Thing is directly or indirectly a member",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddVisibilityPermission": {
        "name": "AddVisibilityPermission",
        "description": "Add a visibility permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "init": {
        "name": "init",
        "description": "",
        "handlerName": "Script",
        "configurationTables": {
          "Script": {
            "isMultiRow": false,
            "name": "Script",
            "description": "Script",
            "rows": [
              {
                "code": "var result = (function () {\n    me.cardType = \"Diamonds\";\n    // In addition to using const enums, any environment variables referenced will also be replaced by their values by the transformer\n    logger.debug(\"Deployment finished on \".concat(\"http://localhost:8015\"));\n    logger.debug(\"The value of my custom variable is \".concat(\"Test\"));\n})()"
              }
            ],
            "dataShapeName": "",
            "ordinal": 0,
            "dataShape": {
              "fieldDefinitions": {
                "code": {
                  "name": "code",
                  "aspects": {},
                  "description": "code",
                  "baseType": "STRING",
                  "ordinal": 0
                }
              }
            }
          }
        }
      },
      "RemoveAlert": {
        "name": "RemoveAlert",
        "description": "Remove an alert for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLocationAlertParameter": {
        "name": "GetLocationAlertParameter",
        "description": "Get a location alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetMashups": {
        "name": "GetMashups",
        "description": "Get the mashups related to this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEventSubscriptions": {
        "name": "GetEventSubscriptions",
        "description": "Get the events that are bound to the remote Thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRunTimePermissionsAsJSON": {
        "name": "GetRunTimePermissionsAsJSON",
        "description": "Get a list of assigned runtime permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddDynamicSubscription": {
        "name": "AddDynamicSubscription",
        "description": "Add a dynamic subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIntegerAlertParameter": {
        "name": "GetIntegerAlertParameter",
        "description": "Get a numeric alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIncomingLocalPropertyBinding": {
        "name": "GetIncomingLocalPropertyBinding",
        "description": "Get incoming local bindings to this thing for the given property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "ForwardEvent": {
        "name": "ForwardEvent",
        "description": "Forward events to the client",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetValueStream": {
        "name": "SetValueStream",
        "description": "Set the value stream for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveServiceDefinition": {
        "name": "RemoveServiceDefinition",
        "description": "Remove a service definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLongAlertParameter": {
        "name": "GetLongAlertParameter",
        "description": "Get a long alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddStringValueStreamEntry": {
        "name": "AddStringValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyValues": {
        "name": "GetPropertyValues",
        "description": "Get the current property values for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLocalPropertyBinding": {
        "name": "GetLocalPropertyBinding",
        "description": "Get the property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertSummary": {
        "name": "GetAlertSummary",
        "description": "Get alert summary status",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryAlertSummary": {
        "name": "QueryAlertSummary",
        "description": "Query the alert summary",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetLocationAlertParameter": {
        "name": "SetLocationAlertParameter",
        "description": "Set a location alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLongPropertyValue": {
        "name": "GetLongPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetReportingStrategy": {
        "name": "GetReportingStrategy",
        "description": "Retrieves this Thing's reporting strategy",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddPropertyTransformDefinition": {
        "name": "AddPropertyTransformDefinition",
        "description": "Add a property transform definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEventDefinitions": {
        "name": "GetEventDefinitions",
        "description": "Get the current event definitions for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetThingTemplate": {
        "name": "GetThingTemplate",
        "description": "Get the thing template for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryNamedPropertyHistory": {
        "name": "QueryNamedPropertyHistory",
        "description": "Queries the value stream entries for specified logged property value along with filter and sort criteria and normalizes the data set to display result for a given time range",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetPropertyValues": {
        "name": "SetPropertyValues",
        "description": "Get a subset of the current property values for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAnomalyAlertTrainingStatisticsForProperty": {
        "name": "GetAnomalyAlertTrainingStatisticsForProperty",
        "description": "Get AnomalyAlert Training Statistics for given Property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryIntegerPropertyHistory": {
        "name": "QueryIntegerPropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "ProcessRemoteEvents": {
        "name": "ProcessRemoteEvents",
        "description": "Process remote events",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DisableThing": {
        "name": "DisableThing",
        "description": "Disable this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyDefinition": {
        "name": "GetPropertyDefinition",
        "description": "Get the current property definitions for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddThingCodeValueStreamEntry": {
        "name": "AddThingCodeValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertSummaryForProperty": {
        "name": "GetAlertSummaryForProperty",
        "description": "Get alert summary for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyTime": {
        "name": "GetPropertyTime",
        "description": "Get the timestamp for a specific property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddVec2ValueStreamEntry": {
        "name": "AddVec2ValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIncomingLocalPropertyBindings": {
        "name": "GetIncomingLocalPropertyBindings",
        "description": "Get all things and their properties that have local bindings on this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAvatarURL": {
        "name": "GetAvatarURL",
        "description": "Get avatar image url",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddImageValueStreamEntry": {
        "name": "AddImageValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyDefinitions": {
        "name": "GetPropertyDefinitions",
        "description": "Get the current property definitions for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetSummaryInformation": {
        "name": "GetSummaryInformation",
        "description": "Get summary information",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "UpdateSubscribedPropertyValues": {
        "name": "UpdateSubscribedPropertyValues",
        "description": "Write subscribed property values for a connected thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryThingCodePropertyHistory": {
        "name": "QueryThingCodePropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveRemoteEventBinding": {
        "name": "RemoveRemoteEventBinding",
        "description": "Remove the remote event binding for a event",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetOutgoingDependenciesAsNetwork": {
        "name": "GetOutgoingDependenciesAsNetwork",
        "description": "Get the outgoing dependencies as a network",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLocalAlertDefinitions": {
        "name": "GetLocalAlertDefinitions",
        "description": "Get local alert definitions for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAlertStatusesForProperty": {
        "name": "GetAlertStatusesForProperty",
        "description": "Get the Statuses of the given Alerts",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNumberAlertParameter": {
        "name": "GetNumberAlertParameter",
        "description": "Get a numeric alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetAllAnomalyAlertTrainingStatistics": {
        "name": "GetAllAnomalyAlertTrainingStatistics",
        "description": "Get All AnomalyAlert Training Statistics on this Thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyQuality": {
        "name": "GetPropertyQuality",
        "description": "Get the quality for a specific property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "UpdateProjectDependencies": {
        "name": "UpdateProjectDependencies",
        "description": "Updates Project's 'dependends-on Projects' by scanning current entity's external dependencies",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetInstanceMetadataWithPermissionsAsJSON": {
        "name": "GetInstanceMetadataWithPermissionsAsJSON",
        "description": "Get the instance metadata in JSON format",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetReportingStrategy": {
        "name": "SetReportingStrategy",
        "description": "Set this Thing's reporting strategy",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetVisibilityPermissionsAsJSON": {
        "name": "GetVisibilityPermissionsAsJSON",
        "description": "Get a list of assigned visibility permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIncomingDependenciesAsNetwork": {
        "name": "GetIncomingDependenciesAsNetwork",
        "description": "Get the incoming dependencies as a network",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "HasAlert": {
        "name": "HasAlert",
        "description": "Check to see if an alert is defined for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemoveEventDefinition": {
        "name": "RemoveEventDefinition",
        "description": "Remove a event definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetRunTimePermissionsAsJSON": {
        "name": "SetRunTimePermissionsAsJSON",
        "description": "Set a list of assigned runtime permissions",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "EnableSubscription": {
        "name": "EnableSubscription",
        "description": "Enable Subscription",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLastModifiedDate": {
        "name": "GetLastModifiedDate",
        "description": "Get the date edit was last modified",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryDateTimePropertyHistory": {
        "name": "QueryDateTimePropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetRemoteEventBinding": {
        "name": "SetRemoteEventBinding",
        "description": "Set the remote event binding for a event",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "EnableAlertsForProperty": {
        "name": "EnableAlertsForProperty",
        "description": "Enable alert(s) for a property. Specify alertName for a specific property alert; otherwise, all alerts are enabled.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetStringAlertParameter": {
        "name": "GetStringAlertParameter",
        "description": "Get a string alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteConfigurationTableRows": {
        "name": "DeleteConfigurationTableRows",
        "description": "Delete one or more rows from a multi-row configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RemovePropertyDefinition": {
        "name": "RemovePropertyDefinition",
        "description": "Remove a property definition",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetConfigurationTableRows": {
        "name": "SetConfigurationTableRows",
        "description": "Update/add one or more rows in a multi-row configuration table",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetStringAlertParameter": {
        "name": "SetStringAlertParameter",
        "description": "Set a string alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddDesignTimePermission": {
        "name": "AddDesignTimePermission",
        "description": "Add a design time permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "CheckPermission": {
        "name": "CheckPermission",
        "description": "Check to see if an entity has a specific run time permission for the current user",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetDateTimeAlertParameter": {
        "name": "SetDateTimeAlertParameter",
        "description": "Set a date alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetBooleanAlertParameter": {
        "name": "GetBooleanAlertParameter",
        "description": "Get a boolean alert parameter",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEffectiveLocalPropertyBindings": {
        "name": "GetEffectiveLocalPropertyBindings",
        "description": "Get the effective local property bindings",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueuePostCommitEvent": {
        "name": "QueuePostCommitEvent",
        "description": "Queue events to be executed in a post commit action",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetDescription": {
        "name": "GetDescription",
        "description": "Get the description for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DisableAllAlerts": {
        "name": "DisableAllAlerts",
        "description": "Disable all alerts for a thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetLocationPropertyValue": {
        "name": "GetLocationPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNamedPropertyValuesVTQ": {
        "name": "GetNamedPropertyValuesVTQ",
        "description": "Get the current property values for this thing as VTQ",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "HasIncomingDependencies": {
        "name": "HasIncomingDependencies",
        "description": "Has incoming dependencies",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetNamedPropertyValuesVTQA": {
        "name": "GetNamedPropertyValuesVTQA",
        "description": "Get a subset of the current property values (VTQ) and the highest alert for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "AddInfoTableValueStreamEntry": {
        "name": "AddInfoTableValueStreamEntry",
        "description": "Add a new stream entry",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetVec4PropertyValue": {
        "name": "GetVec4PropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetAvatar": {
        "name": "SetAvatar",
        "description": "Set the avatar icon for the entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetOwner": {
        "name": "GetOwner",
        "description": "Get an owner to this entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryInfoTablePropertyHistory": {
        "name": "QueryInfoTablePropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetProjectName": {
        "name": "SetProjectName",
        "description": "Set the project name of this entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "RetrainAlert": {
        "name": "RetrainAlert",
        "description": "Retrain an Anomaly Alert",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyLogging": {
        "name": "GetPropertyLogging",
        "description": "Get property logging status for a specific property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "QueryVec3PropertyHistory": {
        "name": "QueryVec3PropertyHistory",
        "description": "Query stream entries, along with filter and sort criteria",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SetDescription": {
        "name": "SetDescription",
        "description": "Overwrite/set the description for an entity",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetConfigurationTable": {
        "name": "GetConfigurationTable",
        "description": "Get a specific configuration table as an InfoTable",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteDesignTimePermission": {
        "name": "DeleteDesignTimePermission",
        "description": "Delete a design time permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "SendMaxQueuedTasks": {
        "name": "SendMaxQueuedTasks",
        "description": "Sends up to a specific maximum number of queued tasks to the connected thing.",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetRemoteServiceBinding": {
        "name": "GetRemoteServiceBinding",
        "description": "Get the remote service binding for a service",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "PurgePropertyHistory": {
        "name": "PurgePropertyHistory",
        "description": "Purge stream entries for a specified date range",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "DeleteVisibilityPermission": {
        "name": "DeleteVisibilityPermission",
        "description": "Delete a visibility permission",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyValuesVTQA": {
        "name": "GetPropertyValuesVTQA",
        "description": "Get the current property values (VTQ) and the highest alert for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetIntegerPropertyValue": {
        "name": "GetIntegerPropertyValue",
        "description": "Get the current property value",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertySubscriptions": {
        "name": "GetPropertySubscriptions",
        "description": "Get the properties plus data change type and data change threshold for the edge Thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetEffectiveLocalPropertyBinding": {
        "name": "GetEffectiveLocalPropertyBinding",
        "description": "Get the effective local property binding for a property",
        "handlerName": "Reflection",
        "configurationTables": {}
      },
      "GetPropertyValuesAsMultiRowTable": {
        "name": "GetPropertyValuesAsMultiRowTable",
        "description": "Get the current property values for this thing",
        "handlerName": "Reflection",
        "configurationTables": {}
      }
    },
    "serviceMappings": {
      "ConfigurationChanges": {
        "queryService": "",
        "deleteService": "",
        "name": "ConfigurationChanges",
        "description": "Configuration change history",
        "listService": "GetConfigurationChangeHistory"
      },
      "IncomingDependencies": {
        "queryService": "",
        "deleteService": "",
        "name": "IncomingDependencies",
        "description": "Incoming dependencies",
        "listService": "GetIncomingDependencies"
      },
      "OutgoingDependencyNetwork": {
        "queryService": "",
        "deleteService": "",
        "name": "OutgoingDependencyNetwork",
        "description": "Outgoing dependency network",
        "listService": "GetOutgoingDependenciesAsNetwork"
      },
      "OutgoingDependencies": {
        "queryService": "",
        "deleteService": "",
        "name": "OutgoingDependencies",
        "description": "Outgoing dependencies",
        "listService": "GetOutgoingDependencies"
      },
      "IncomingDependencyNetwork": {
        "queryService": "",
        "deleteService": "",
        "name": "IncomingDependencyNetwork",
        "description": "Incoming dependency network",
        "listService": "GetIncomingDependenciesAsNetwork"
      },
      "PropertyHistory": {
        "queryService": "",
        "deleteService": "",
        "name": "PropertyHistory",
        "description": "Mapped services for property history",
        "listService": "QueryPropertyHistory"
      }
    },
    "serviceDefinitions": {
      "SetLocalPropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "aspects": {
            "name": "aspects",
            "aspects": {},
            "description": "Aspects for the local binding",
            "baseType": "JSON",
            "ordinal": 3
          },
          "sourceThingName": {
            "name": "sourceThingName",
            "aspects": {},
            "description": "Thing name to bind to",
            "baseType": "STRING",
            "ordinal": 1
          },
          "sourcePropertyName": {
            "name": "sourcePropertyName",
            "aspects": {},
            "description": "Source property name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "SetLocalPropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetBooleanPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetBooleanPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetDesignTimePermissions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetDesignTimePermissions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned design time permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Permissions"
          },
          "description": "Permission list",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetValueStream": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetValueStream",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the identifier for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "DataLogging",
        "resultType": {
          "name": "name",
          "aspects": {},
          "description": "Value Stream Name",
          "baseType": "THINGNAME",
          "ordinal": 0
        }
      },
      "SetMultiRowConfigurationTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "configurationTable": {
            "name": "configurationTable",
            "aspects": {},
            "description": "Configuration table content",
            "baseType": "INFOTABLE",
            "ordinal": 1
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetMultiRowConfigurationTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set an entire multi-row configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddNumberValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "NUMBER",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddNumberValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryVec2PropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryVec2PropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Vec2DataShape"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddEventDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "remoteEventName": {
            "name": "remoteEventName",
            "aspects": {},
            "description": "Remote event name",
            "baseType": "STRING",
            "ordinal": 5
          },
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {
              "defaultValue": ""
            },
            "description": "Property description",
            "baseType": "STRING",
            "ordinal": 1
          },
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category",
            "baseType": "STRING",
            "ordinal": 2
          },
          "remote": {
            "name": "remote",
            "aspects": {
              "defaultValue": false
            },
            "description": "Is a remote service",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "dataShape": {
            "name": "dataShape",
            "aspects": {},
            "description": "Data shape",
            "baseType": "DATASHAPENAME",
            "ordinal": 3
          }
        },
        "name": "AddEventDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add or update an event definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetVisibilityPermissions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetVisibilityPermissions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned visibility permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Permissions"
          },
          "description": "Permission list",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "PurgeAllPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 1
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "PurgeAllPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Purge all value stream entries for a specified date range",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Maintenance",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddLocationValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "LOCATION",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddLocationValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddVec3ValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "VEC3",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddVec3ValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetRunTimePermissions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetRunTimePermissions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned runtime permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Permissions"
          },
          "description": "Permission list",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetVec3PropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetVec3PropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "VEC3",
          "ordinal": 0
        }
      },
      "GetMetadataAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetMetadataAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the metadata in JSON format",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": " metadata",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "RemoveRemoteServiceBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "serviceName": {
            "name": "serviceName",
            "aspects": {
              "isRequired": true
            },
            "description": "Service name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveRemoteServiceBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove the remote service binding for a service",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetThingSummaryInformation": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetThingSummaryInformation",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get thing summary information",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "Summary",
          "aspects": {
            "dataShape": "Thing"
          },
          "description": "Thing summary information",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetAlertDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAlertDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get effective alert definitions for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "AlertDefinitions",
          "aspects": {
            "dataShape": "AlertDefinition"
          },
          "description": "Alert definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "CheckPermissionForUser": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the resource (i.e. property, service, event) to check",
            "baseType": "STRING",
            "ordinal": 2
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 1
          },
          "user": {
            "name": "user",
            "aspects": {},
            "description": "User name",
            "baseType": "USERNAME",
            "ordinal": 0
          }
        },
        "name": "CheckPermissionForUser",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific run time permission for a specific user",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the user has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "AcknowledgeAllAlerts": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "message": {
            "name": "message",
            "aspects": {},
            "description": "Message (optional)",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "AcknowledgeAllAlerts",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Acknowledge all active alerts",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetImagePropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetImagePropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "IMAGE",
          "ordinal": 0
        }
      },
      "SetPublished": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "publish": {
            "name": "publish",
            "aspects": {},
            "description": "Publish status (true/false)",
            "baseType": "BOOLEAN",
            "ordinal": 0
          }
        },
        "name": "SetPublished",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set this as a published thing for federation",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Federation",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetOutgoingDependencies": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          }
        },
        "name": "GetOutgoingDependencies",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the outgoing dependencies",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityDescriptor"
          },
          "description": "Related entities",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetTunnel": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the tunnel to query",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetTunnel",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get information about a specific tunnel endpoint registered at the edge",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "TunnelEndpoint"
          },
          "description": "A tunnel endpoint",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryStringPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryStringPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "StringValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "asyncService": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {
          "infoTable": {
            "name": "infoTable",
            "aspects": {
              "isRequired": false,
              "dataShape": "GenericStringList"
            },
            "description": "",
            "baseType": "INFOTABLE",
            "ordinal": 0
          },
          "stringParameter": {
            "name": "stringParameter",
            "aspects": {
              "isRequired": true,
              "defaultValue": "Parameter default value"
            },
            "description": "",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "asyncService",
        "aspects": {
          "isAsync": true
        },
        "isLocalOnly": false,
        "description": "Services created through this project are marked overridable as default. Use the `@final` decorator to make a service non-overridable.\n\nUse the `async` keyword to mark a service async. You cannot specify a return type in this case. Note that you cannot use the\n`await` keyword in these services as the `async` modifier is erased at runtime.\n\nService parameters must be specified as a destructured object like in the example below.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetAlertStatuses": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetAlertStatuses",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the Statuses of the given Alerts",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AlertStatus"
          },
          "description": "Status of all Alerts on this Thing",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetPublished": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetPublished",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get published thing for federation",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Federation",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Publishing status for this thing",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "EnableAllAlerts": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 0
          }
        },
        "name": "EnableAllAlerts",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Enable all alerts for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryBooleanPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryBooleanPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "BooleanValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetTunnels": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {},
        "name": "GetTunnels",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get a list of Tunnel Endpoints registered at the edge",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "TunnelEndpoint"
          },
          "description": "List of registered tunnel endpoints",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddRunTimePermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "allow": {
            "name": "allow",
            "aspects": {},
            "description": "Permission (true = allow, false = deny)",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of user or group)",
            "baseType": "STRING",
            "ordinal": 2
          },
          "resource": {
            "name": "resource",
            "aspects": {},
            "description": "Resource name (* = all or enter a specific resource (i.e. Service, Property, Event) to override)",
            "baseType": "STRING",
            "ordinal": 1
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type (PropertyRead PropertyWrite ServiceInvoke EventInvoke EventSubscribe)",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (User or Group)",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "AddRunTimePermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a run time permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "IsMultiRowTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "IsMultiRowTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check if a configuration table is a multi-row table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Flag if table is multi-row or not",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "RemoveRemotePropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveRemotePropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove the remote property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetEffectivePropertyLogging": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name to look up on the effective shape for its logging status",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetEffectivePropertyLogging",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the logging status of a specific property from the effective Thing shape",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "DataLogging",
        "resultType": {
          "name": "status",
          "aspects": {},
          "description": "Effective property logging status",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetProjectName": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetProjectName",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the project name of this entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Projects",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "The project name of this entity",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "GetImplementedShapes": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetImplementedShapes",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the implemented thing shapes for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Implemented Shapes",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetThingCodePropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetThingCodePropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "THINGCODE",
          "ordinal": 0
        }
      },
      "UpdatePropertyValues": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {
              "dataShape": "NamedVTQ"
            },
            "description": "Collection of properties to be updated",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "UpdatePropertyValues",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Write property values for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "DeleteAllConfigurationTableRows": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 1
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "DeleteAllConfigurationTableRows",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete all rows from a multi-row configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddServiceDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {
              "defaultValue": ""
            },
            "description": "Property description",
            "baseType": "STRING",
            "ordinal": 1
          },
          "remoteServiceName": {
            "name": "remoteServiceName",
            "aspects": {},
            "description": "Remote service name",
            "baseType": "STRING",
            "ordinal": 6
          },
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category",
            "baseType": "STRING",
            "ordinal": 2
          },
          "remote": {
            "name": "remote",
            "aspects": {
              "defaultValue": false
            },
            "description": "Is a remote service",
            "baseType": "BOOLEAN",
            "ordinal": 5
          },
          "parameters": {
            "name": "parameters",
            "aspects": {
              "dataShape": "FieldDefinition"
            },
            "description": "Service parameters",
            "baseType": "INFOTABLE",
            "ordinal": 3
          },
          "resultType": {
            "name": "resultType",
            "aspects": {
              "dataShape": "FieldDefinition"
            },
            "description": "Service result type",
            "baseType": "INFOTABLE",
            "ordinal": 4
          },
          "timeout": {
            "name": "timeout",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Request timeout",
            "baseType": "INTEGER",
            "ordinal": 7
          }
        },
        "name": "AddServiceDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add or update a service definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "CheckDesignTimePermissionForGroup": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 1
          },
          "group": {
            "name": "group",
            "aspects": {},
            "description": "Group name",
            "baseType": "GROUPNAME",
            "ordinal": 0
          }
        },
        "name": "CheckDesignTimePermissionForGroup",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific design time permission for a specific group",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the group has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "AddOrUpdateAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertType": {
            "name": "alertType",
            "aspects": {},
            "description": "Alert type",
            "baseType": "STRING",
            "ordinal": 1
          },
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {
              "defaultValue": ""
            },
            "description": "Alert description",
            "baseType": "STRING",
            "ordinal": 3
          },
          "attributes": {
            "name": "attributes",
            "aspects": {},
            "description": "Alert attributes",
            "baseType": "INFOTABLE",
            "ordinal": 6
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 7
          },
          "priority": {
            "name": "priority",
            "aspects": {
              "defaultValue": 1
            },
            "description": "Alert priority",
            "baseType": "INTEGER",
            "ordinal": 5
          },
          "enabled": {
            "name": "enabled",
            "aspects": {
              "defaultValue": false
            },
            "description": "Alert enabled",
            "baseType": "BOOLEAN",
            "ordinal": 4
          }
        },
        "name": "AddOrUpdateAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add or update an alert for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryAlertHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 4
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 3
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "QueryAlertHistory",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Query the alert history",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "isStreamEntry": true,
            "dataShape": "AlertHistory"
          },
          "description": "Alert History",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "CheckDesignTimePermissionForUser": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 1
          },
          "user": {
            "name": "user",
            "aspects": {},
            "description": "User name",
            "baseType": "USERNAME",
            "ordinal": 0
          }
        },
        "name": "CheckDesignTimePermissionForUser",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific design time permission for a specific user",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the user has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetDifferencesAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "otherEntity": {
            "name": "otherEntity",
            "aspects": {},
            "description": "Entity to compare",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetDifferencesAsJSON",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the difference between this entity and another",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Difference"
          },
          "description": "Created Infotable",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "SendQueuedTasks": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "SendQueuedTasks",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Sends any queued tasks to the connected thing.",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Queueing",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddPropertyDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "ignoreInvalidDefinitions": {
            "name": "ignoreInvalidDefinitions",
            "aspects": {
              "defaultValue": false
            },
            "description": "True will skip over any invalid definitions provided, false indicates to fail the whole transaction when at least one invalid definition is found",
            "baseType": "BOOLEAN",
            "ordinal": 1
          },
          "values": {
            "name": "values",
            "aspects": {
              "dataShape": "PropertyDefinitionWithDetails"
            },
            "description": "Infotable where each row defines a property, using the PropertyDefinitionWithDetails data shape",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "AddPropertyDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add multiple property definitions at once",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "status",
          "aspects": {
            "dataShape": "BulkProcessingReport"
          },
          "description": "Table of information about which properties caused errors while attempting to add",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "DisableAlertsForProperty": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 2
          }
        },
        "name": "DisableAlertsForProperty",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Disable alert(s) for a property. Specify alertName for a specific property alert; otherwise, all alerts are disabled.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "IsEnabled": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "IsEnabled",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get Enabled Status",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Lifecycle",
        "resultType": {
          "name": "enabled",
          "aspects": {},
          "description": "Enabled status",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "ImplementsShape": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "thingShapeName": {
            "name": "thingShapeName",
            "aspects": {},
            "description": "Thing shape name",
            "baseType": "THINGSHAPENAME",
            "ordinal": 0
          }
        },
        "name": "ImplementsShape",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if a thing implements a particular thing shape",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Implements Shape",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetPropertyValuesVTQ": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetPropertyValuesVTQ",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property values for this thing as VTQ",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property values",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetPropertyLogging": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "enabled": {
            "name": "enabled",
            "aspects": {},
            "description": "Enable/disable logging",
            "baseType": "BOOLEAN",
            "ordinal": 1
          }
        },
        "name": "SetPropertyLogging",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set property logging status for a specific property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "DataLogging",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetDifferences": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "otherEntity": {
            "name": "otherEntity",
            "aspects": {},
            "description": "Entity to compare",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetDifferences",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the difference between this entity and another",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Difference"
          },
          "description": "Created Infotable",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddLongValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "LONG",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddLongValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetUnitsForNumericPropertyDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "units": {
            "name": "units",
            "aspects": {},
            "description": "Units (eg. lbs, F, inches, etc.) associated with input. For information only.",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "SetUnitsForNumericPropertyDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the additional information for units for a specific Long, Integer, or Number property.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddConfigurationTableDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "isMultiRow": {
            "name": "isMultiRow",
            "aspects": {
              "defaultValue": false
            },
            "description": "Controls whether the configuration table should accept tabular entry of data or key/value entry. When set to true, the fields in the data shape provided will be interpreted as column descriptors. When set to false or omitted, the fields are interpreted as row descriptors",
            "baseType": "BOOLEAN",
            "ordinal": 5
          },
          "name": {
            "name": "name",
            "aspects": {
              "isRequired": true
            },
            "description": "The name of the configuration table. This name should be used when retrieving values from the configuration table during execution. Configuration tables must have unique names that obey standard ThingWorx entity naming conventions. It is strongly recommended that you always specify a non-empty configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {},
            "description": "A short description of the configuration table and its purpose",
            "baseType": "STRING",
            "ordinal": 1
          },
          "category": {
            "name": "category",
            "aspects": {},
            "description": "A category that conceptually groups together related configuration tables.",
            "baseType": "STRING",
            "ordinal": 2
          },
          "dataShapeName": {
            "name": "dataShapeName",
            "aspects": {
              "isRequired": true
            },
            "description": "This datashape will be used as the data shape for the Configuration table. Any changes to the datashape like adding or deleting fields will reflect on the configuration table.",
            "baseType": "DATASHAPENAME",
            "ordinal": 6
          },
          "isHidden": {
            "name": "isHidden",
            "aspects": {
              "defaultValue": false
            },
            "description": "Controls whether the configuration table should be hidden by Composer (e.g. if the configuration is for internal purposes only) ",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "ordinal": {
            "name": "ordinal",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Controls the order in which the configuration tables should be rendered. Any non-negative integer is permitted, where lower values take higher precedence over larger values. If several tables share the same ordinal, then the order is non-deterministic",
            "baseType": "INTEGER",
            "ordinal": 3
          }
        },
        "name": "AddConfigurationTableDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Adds a ConfigurationTableDefinition and creates and ConfigurationTable from the definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetNumericLoggedProperties": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetNumericLoggedProperties",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of logged properties for this thing that are of a numeric data type",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "PropertyDefinition"
          },
          "description": "Property names",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetTunnelStatus": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {},
        "name": "GetTunnelStatus",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the status and proxy URL for accessing tunneling",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "TunnelStatus"
          },
          "description": "A tunnel url",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetNamedProperties": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyNames": {
            "name": "propertyNames",
            "aspects": {},
            "description": "A JSON object containing an \"items\" key whose value is an array of property names whose current values are to be returned",
            "baseType": "JSON",
            "ordinal": 0
          }
        },
        "name": "GetNamedProperties",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Gets the current values of the specified properties.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "A non-null InfoTable containing one row, where each field name corresponds to a property name specified in \"propertyNames\", and each field value is the current value of that corresponding property",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetRemotePropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "aspects": {
            "name": "aspects",
            "aspects": {},
            "description": "Aspects for the remote binding",
            "baseType": "JSON",
            "ordinal": 5
          },
          "pushThreshold": {
            "name": "pushThreshold",
            "aspects": {},
            "description": "Push threshold",
            "baseType": "NUMBER",
            "ordinal": 4
          },
          "foldType": {
            "name": "foldType",
            "aspects": {},
            "description": "How a remote property's value should be handled by the server when a connection is lost",
            "baseType": "STRING",
            "ordinal": 7
          },
          "sourcePropertyName": {
            "name": "sourcePropertyName",
            "aspects": {},
            "description": "Source property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "timeout": {
            "name": "timeout",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Request timeout",
            "baseType": "INTEGER",
            "ordinal": 2
          },
          "cacheTime": {
            "name": "cacheTime",
            "aspects": {},
            "description": "Property's cache time value at the server in milliseconds",
            "baseType": "INTEGER",
            "ordinal": 6
          },
          "pushType": {
            "name": "pushType",
            "aspects": {},
            "description": "Push type",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "SetRemotePropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the remote property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "RemoveTunnel": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the tunnel to remove",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveTunnel",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Remove a tunnel endpoint from the edge",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetEventDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetEventDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get ann event definitions for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EventDefinition"
          },
          "description": "Event definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "RestartThing": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "RestartThing",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Restart this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Lifecycle",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetIntegerAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "INTEGER",
            "ordinal": 3
          }
        },
        "name": "SetIntegerAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a numeric alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetRemoteMetadata": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetRemoteMetadata",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Return the metadata for the connected thing",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Connected Thing metadata",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "AddPropertyDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "defaultValue": {
            "name": "defaultValue",
            "aspects": {},
            "description": "Default value for property",
            "baseType": "STRING",
            "ordinal": 15
          },
          "remoteBindingAspects": {
            "name": "remoteBindingAspects",
            "aspects": {},
            "description": "Aspects for the remote binding",
            "baseType": "JSON",
            "ordinal": 16
          },
          "description": {
            "name": "description",
            "aspects": {
              "defaultValue": ""
            },
            "description": "Property description",
            "baseType": "STRING",
            "ordinal": 1
          },
          "readOnly": {
            "name": "readOnly",
            "aspects": {
              "defaultValue": false
            },
            "description": "Read only",
            "baseType": "BOOLEAN",
            "ordinal": 5
          },
          "remote": {
            "name": "remote",
            "aspects": {
              "defaultValue": false
            },
            "description": "Is a remote property",
            "baseType": "BOOLEAN",
            "ordinal": 10
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Data type",
            "baseType": "BASETYPENAME",
            "ordinal": 2
          },
          "remotePropertyName": {
            "name": "remotePropertyName",
            "aspects": {},
            "description": "Remote property name",
            "baseType": "STRING",
            "ordinal": 11
          },
          "timeout": {
            "name": "timeout",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Request timeout",
            "baseType": "INTEGER",
            "ordinal": 12
          },
          "pushType": {
            "name": "pushType",
            "aspects": {},
            "description": "Push type",
            "baseType": "STRING",
            "ordinal": 13
          },
          "dataChangeThreshold": {
            "name": "dataChangeThreshold",
            "aspects": {},
            "description": "Data change threshold",
            "baseType": "NUMBER",
            "ordinal": 9
          },
          "logged": {
            "name": "logged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Log property value",
            "baseType": "BOOLEAN",
            "ordinal": 7
          },
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "pushThreshold": {
            "name": "pushThreshold",
            "aspects": {},
            "description": "Push threshold",
            "baseType": "NUMBER",
            "ordinal": 14
          },
          "dataChangeType": {
            "name": "dataChangeType",
            "aspects": {},
            "description": "Data change type",
            "baseType": "STRING",
            "ordinal": 8
          },
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category",
            "baseType": "STRING",
            "ordinal": 3
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist property value",
            "baseType": "BOOLEAN",
            "ordinal": 6
          },
          "dataShape": {
            "name": "dataShape",
            "aspects": {},
            "description": "Data shape",
            "baseType": "DATASHAPENAME",
            "ordinal": 4
          }
        },
        "name": "AddPropertyDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a property definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetDateTimeAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetDateTimeAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a date alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "DATETIME",
          "ordinal": 0
        }
      },
      "SetConfigurationTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "configurationTable": {
            "name": "configurationTable",
            "aspects": {},
            "description": "Configuration table content",
            "baseType": "INFOTABLE",
            "ordinal": 1
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetConfigurationTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set an entire configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "IsInNetwork": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "network": {
            "name": "network",
            "aspects": {},
            "description": "Network name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "IsInNetwork",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if a thing is in a specific network",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Networks",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Result",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "RemoveDynamicSubscription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "eventName": {
            "name": "eventName",
            "aspects": {},
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "thingName": {
            "name": "thingName",
            "aspects": {},
            "description": "Thing name",
            "baseType": "THINGNAME",
            "ordinal": 0
          },
          "serviceName": {
            "name": "serviceName",
            "aspects": {},
            "description": "Local service name",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "RemoveDynamicSubscription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove a dynamic subscription",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Subscriptions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryAuditHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "The latest audit date to query",
            "baseType": "DATETIME",
            "ordinal": 2
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 3
          },
          "locale": {
            "name": "locale",
            "aspects": {},
            "description": "The localizationTable locale that is used to localize the results",
            "baseType": "STRING",
            "ordinal": 4
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "The earliest audit date to query",
            "baseType": "DATETIME",
            "ordinal": 1
          }
        },
        "name": "QueryAuditHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query the historical audit entries for this Thing only",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AuditHistory"
          },
          "description": "Historical Audits for this thing only",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "RemoveTags": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tags": {
            "name": "tags",
            "aspects": {
              "tagType": "ModelTags"
            },
            "description": "Tags to remove from the entity",
            "baseType": "TAGS",
            "ordinal": 0
          }
        },
        "name": "RemoveTags",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove tags from an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetNumberPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetNumberPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "NUMBER",
          "ordinal": 0
        }
      },
      "GetAvatar": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetAvatar",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get avatar image",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "Avatar",
          "aspects": {},
          "description": "Entity avatar",
          "baseType": "IMAGE",
          "ordinal": 0
        }
      },
      "GetLoggedProperties": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Type to filter on",
            "baseType": "BASETYPENAME",
            "ordinal": 0
          }
        },
        "name": "GetLoggedProperties",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of logged properties for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "PropertyDefinition"
          },
          "description": "Property names",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "EnableThing": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "EnableThing",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Enable this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Lifecycle",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetServiceDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetServiceDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a service definition for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ServiceDefinition"
          },
          "description": "Service definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetConfigurationChangeHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetConfigurationChangeHistory",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the configuration change history",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Editing",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ConfigurationChange"
          },
          "description": "Configuration changes",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "DeleteRunTimePermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of user or group)",
            "baseType": "STRING",
            "ordinal": 2
          },
          "resource": {
            "name": "resource",
            "aspects": {},
            "description": "Resource name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (User or Group)",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "DeleteRunTimePermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete a run time permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetConfigurationTableRow": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "key": {
            "name": "key",
            "aspects": {},
            "description": "Row key value",
            "baseType": "STRING",
            "ordinal": 1
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetConfigurationTableRow",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a specific configuration table row as an InfoTable",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "table",
          "aspects": {},
          "description": "table",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetStringPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetStringPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "EvaluateReporting": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {
          "eventData": {
            "name": "eventData",
            "aspects": {},
            "description": "Data used to evaluate presence",
            "baseType": "INFOTABLE",
            "ordinal": 4
          },
          "eventTime": {
            "name": "eventTime",
            "aspects": {},
            "description": "Time event is triggered",
            "baseType": "DATETIME",
            "ordinal": 1
          },
          "sourceProperty": {
            "name": "sourceProperty",
            "aspects": {},
            "description": "Soure property",
            "baseType": "STRING",
            "ordinal": 3
          },
          "eventName": {
            "name": "eventName",
            "aspects": {},
            "description": "Name of the event",
            "baseType": "STRING",
            "ordinal": 0
          },
          "source": {
            "name": "source",
            "aspects": {},
            "description": "Name of Thing that triggered event",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "EvaluateReporting",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Evaluates this Thing's Reporting status based on its strategy",
        "isPrivate": false,
        "sourceName": "Reportable",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetInstanceMetadataAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetInstanceMetadataAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the instance metadata in JSON format",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Instance metadata",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "SaveConfigurationTables": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "SaveConfigurationTables",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Save any changes to configuration tables",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AcknowledgeAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "message": {
            "name": "message",
            "aspects": {},
            "description": "Message (optional)",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "AcknowledgeAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Acknowledge an active alert",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryLocationPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryLocationPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "LocationValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryVec4PropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryVec4PropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Vec4DataShape"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetRemoteServiceBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "sourceServiceName": {
            "name": "sourceServiceName",
            "aspects": {},
            "description": "Source service name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "serviceName": {
            "name": "serviceName",
            "aspects": {
              "isRequired": true
            },
            "description": "Service name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "timeout": {
            "name": "timeout",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Request timeout",
            "baseType": "INTEGER",
            "ordinal": 2
          }
        },
        "name": "SetRemoteServiceBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the remote service binding for a service",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "IsDerivedFromTemplate": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "thingTemplateName": {
            "name": "thingTemplateName",
            "aspects": {},
            "description": "Thing template name",
            "baseType": "THINGTEMPLATENAME",
            "ordinal": 0
          }
        },
        "name": "IsDerivedFromTemplate",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if a thing is derived from a particular thing template",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Is Derived From Template",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "WritePropertiesToStream": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {
              "thingTemplate": "Stream"
            },
            "description": "Stream name",
            "baseType": "THINGNAME",
            "ordinal": 0
          },
          "tags": {
            "name": "tags",
            "aspects": {
              "tagType": "DataTags"
            },
            "description": "Tags",
            "baseType": "TAGS",
            "ordinal": 1
          }
        },
        "name": "WritePropertiesToStream",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Store properties of this thing to a stream",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Data",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetThingRelationships": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxDepth": {
            "name": "maxDepth",
            "aspects": {},
            "description": "Maximum depth to search",
            "baseType": "INTEGER",
            "ordinal": 0
          }
        },
        "name": "GetThingRelationships",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Return a list of all the things referenced by this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Relationships",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ThingRelationship"
          },
          "description": "Thing connections",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "IsDynamicSubscriptionCreated": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "eventName": {
            "name": "eventName",
            "aspects": {},
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "thingName": {
            "name": "thingName",
            "aspects": {},
            "description": "Thing name",
            "baseType": "THINGNAME",
            "ordinal": 0
          },
          "serviceName": {
            "name": "serviceName",
            "aspects": {},
            "description": "Local service name",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "IsDynamicSubscriptionCreated",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Returns true if given dynamic subscription is present",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Subscriptions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if given dynamic subscription exist or not",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetConfigurationTables": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetConfigurationTables",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of configuration tables",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Configuration Tables",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddVec4ValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "VEC4",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddVec4ValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddDateTimeValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "DATETIME",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddDateTimeValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetServiceDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category to filter on",
            "baseType": "STRING",
            "ordinal": 0
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Type to filter on",
            "baseType": "BASETYPENAME",
            "ordinal": 1
          },
          "dataShape": {
            "name": "dataShape",
            "aspects": {},
            "description": "Data shape to filter on if InfoTable base type",
            "baseType": "DATASHAPENAME",
            "ordinal": 2
          }
        },
        "name": "GetServiceDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current service definitions for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ServiceDefinition"
          },
          "description": "Service definitions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "PurgeSelectedPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertiesToPurge": {
            "name": "propertiesToPurge",
            "aspects": {
              "dataShape": "PropertyList"
            },
            "description": "Properties to purge",
            "baseType": "INFOTABLE",
            "ordinal": 2
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 1
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "PurgeSelectedPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Purge all value stream entries for a specified date range for a given list of properties",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Maintenance",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetHomeMashup": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Home mashup name",
            "baseType": "MASHUPNAME",
            "ordinal": 0
          }
        },
        "name": "SetHomeMashup",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set home mashup",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Mashups",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetOwner": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "User name",
            "baseType": "USERNAME",
            "ordinal": 0
          }
        },
        "name": "SetOwner",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Assign an owner to this entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryNumberPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryNumberPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "NumberValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetNumberAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "NUMBER",
            "ordinal": 3
          }
        },
        "name": "SetNumberAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a numeric alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetHomeMashup": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetHomeMashup",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get home mashup",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Mashups",
        "resultType": {
          "name": "HomeMashup",
          "aspects": {},
          "description": "Home mashup",
          "baseType": "MASHUPNAME",
          "ordinal": 0
        }
      },
      "GetTags": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetTags",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the tags for an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "tags",
          "aspects": {
            "tagType": "ModelTags"
          },
          "description": "tags",
          "baseType": "TAGS",
          "ordinal": 0
        }
      },
      "GetAlertStatus": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAlertStatus",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the Status of the given Alert",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Status of Alert",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "SetBooleanAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "BOOLEAN",
            "ordinal": 3
          }
        },
        "name": "SetBooleanAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a boolean alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetNetworks": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetNetworks",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the networks associated with a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Networks",
        "resultType": {
          "name": "networks",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Networks",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "DeleteConfigurationTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 1
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "DeleteConfigurationTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete an entire configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPermissionsForCurrentUser": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Target name (or wildcard)",
            "baseType": "STRING",
            "ordinal": 1
          },
          "permissionName": {
            "name": "permissionName",
            "aspects": {},
            "description": "Permission name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetPermissionsForCurrentUser",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get current user permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "UserPermissions"
          },
          "description": "Permissions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetTagsAsInfoTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetTagsAsInfoTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the tags for an entity as an InfoTable",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "tags",
          "aspects": {
            "dataShape": "VocabularyTermList"
          },
          "description": "tags",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "CheckDesignTimePermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "CheckDesignTimePermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific design time permission for the current user",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the user has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetConfigurationTableDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetConfigurationTableDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a specific configuration table definition as an InfoTable",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Configuration Table Definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 3
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 2
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 4
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 1
          }
        },
        "name": "QueryPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Queries the value stream entries for logged property value along with filter and sort criteria and normalizes the data set to display result for a given time range",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetVec2PropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetVec2PropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "VEC2",
          "ordinal": 0
        }
      },
      "QueryLongPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryLongPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "LongValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "RemoveLocalPropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveLocalPropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove the local property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetDesignTimePermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "permissions": {
            "name": "permissions",
            "aspects": {},
            "description": "Permissions in JSON format",
            "baseType": "JSON",
            "ordinal": 0
          }
        },
        "name": "SetDesignTimePermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a list of assigned design time permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "HasOutgoingDependencies": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "HasOutgoingDependencies",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Has outgoing dependencies",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Has dependencies",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetRemoteEventBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "eventName": {
            "name": "eventName",
            "aspects": {
              "isRequired": true
            },
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetRemoteEventBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the remote event binding for a event",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "RemoteEventBinding"
          },
          "description": "Event binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetPermissionsForGroup": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Target name (or wildcard)",
            "baseType": "STRING",
            "ordinal": 2
          },
          "group": {
            "name": "group",
            "aspects": {},
            "description": "Group name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "permissionName": {
            "name": "permissionName",
            "aspects": {},
            "description": "Permission name",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "GetPermissionsForGroup",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get group permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "UserPermissions"
          },
          "description": "Permissions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddIntegerValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "INTEGER",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddIntegerValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetRemotePropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetRemotePropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the remote property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "RemotePropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetMetadataWithPermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetMetadataWithPermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the metadata in JSON format",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": " metadata",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "SetTags": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tags": {
            "name": "tags",
            "aspects": {
              "tagType": "ModelTags"
            },
            "description": "Tags for an entity",
            "baseType": "TAGS",
            "ordinal": 0
          }
        },
        "name": "SetTags",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Overwrite/set the tags for an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetIncomingDependencies": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          }
        },
        "name": "GetIncomingDependencies",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the incoming dependencies",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityDescriptor"
          },
          "description": "Related entities",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetMetadata": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetMetadata",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the metadata in InfoTable format",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": " metadata",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetLocallyImplementedShapes": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetLocallyImplementedShapes",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the locally implemented thing shapes for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Implemented Shapes",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "PromoteAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "PromoteAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Promote an overridden alert to the nearest parent in its heirarchy that defines it.  Currently only Anomaly type Alerts are supported.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddTags": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tags": {
            "name": "tags",
            "aspects": {
              "tagType": "ModelTags"
            },
            "description": "Tags for an entity",
            "baseType": "TAGS",
            "ordinal": 0
          }
        },
        "name": "AddTags",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Append additional tags to an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPermissionsForUser": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Target name (or wildcard)",
            "baseType": "STRING",
            "ordinal": 2
          },
          "user": {
            "name": "user",
            "aspects": {},
            "description": "User name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "permissionName": {
            "name": "permissionName",
            "aspects": {},
            "description": "Permission name",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "GetPermissionsForUser",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get user permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "UserPermissions"
          },
          "description": "Permissions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddBooleanValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddBooleanValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetNamedPropertyValues": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyNames": {
            "name": "propertyNames",
            "aspects": {
              "dataShape": "EntityList"
            },
            "description": "An InfoTable, described by the \"EntityList\" DataShape, identifying the properties whose current values are to be returned",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "GetNamedPropertyValues",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Gets the current values of the specified properties.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "A non-null InfoTable containing one row, where each field name corresponds to a property name specified in \"propertyNames\", and each field value is the current value of that corresponding property",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "CheckPermissionForGroup": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the resource (i.e. property, service, event) to check",
            "baseType": "STRING",
            "ordinal": 2
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 1
          },
          "group": {
            "name": "group",
            "aspects": {},
            "description": "Group name",
            "baseType": "GROUPNAME",
            "ordinal": 0
          }
        },
        "name": "CheckPermissionForGroup",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific run time permission for a specific group",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the group has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetDesignTimePermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetDesignTimePermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned designtime permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Permission list",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "SetIdentifier": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "identifier": {
            "name": "identifier",
            "aspects": {},
            "description": "Thing identifier for remote things",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetIdentifier",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the identifier for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Identifier",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddTunnel": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {
          "numConnects": {
            "name": "numConnects",
            "aspects": {},
            "description": "The number of connections required to initilaize the tunnel",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "port": {
            "name": "port",
            "aspects": {},
            "description": "Port that the tunnel will connect to",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "proto": {
            "name": "proto",
            "aspects": {},
            "description": "Protocol used by the tunnel",
            "baseType": "STRING",
            "ordinal": 0
          },
          "host": {
            "name": "host",
            "aspects": {},
            "description": "Host that the tunnel will connect to",
            "baseType": "STRING",
            "ordinal": 0
          },
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the tunnel to add",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {},
            "description": "Description of the tunnel",
            "baseType": "STRING",
            "ordinal": 0
          },
          "appUri": {
            "name": "appUri",
            "aspects": {},
            "description": "Location of the client app that will use this tunnel",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "AddTunnel",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Register a new tunnel endpoint at the edge",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetDateTimePropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetDateTimePropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "DATETIME",
          "ordinal": 0
        }
      },
      "DisableSubscription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "subscriptionName": {
            "name": "subscriptionName",
            "aspects": {},
            "description": "Subscription name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "DisableSubscription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Disable Subscription",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Subscriptions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetAnomalyAlertTrainingStatisticsForAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAnomalyAlertTrainingStatisticsForAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get Training Statistics for given Alert",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AnomalyAlertTrainingStatistics"
          },
          "description": "Anomaly Alert Training Statistics for given Alert",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "HavePropertiesChangedSince": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Timestamp to compare",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "HavePropertiesChangedSince",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Has any property changed since a given time",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Result",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetQueuedTasks": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetQueuedTasks",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Retrieve any tasks for this connected thing.",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Queueing",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "MessageStoreList"
          },
          "description": "Edge things",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetIdentifier": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetIdentifier",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the identifier for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Identifier",
        "resultType": {
          "name": "identifier",
          "aspects": {},
          "description": "Identifier",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "QueryImagePropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryImagePropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ImageValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetVisibilityPermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "permissions": {
            "name": "permissions",
            "aspects": {},
            "description": "Permissions in JSON format",
            "baseType": "JSON",
            "ordinal": 0
          }
        },
        "name": "SetVisibilityPermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a list of assigned visibility permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetAlertDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAlertDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get alert definition for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "AlertDefinitions",
          "aspects": {
            "dataShape": "AlertDefinition"
          },
          "description": "Alert definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetThingGroupDelegatedVisibilityPermissions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetThingGroupDelegatedVisibilityPermissions",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the Visibility permissions from all the ThingGroups where this Thing is directly or indirectly a member",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "DelegatedVisibilityPermission"
          },
          "description": "Delegated Permissions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddVisibilityPermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of organization or organization unit)",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (Organization or Organization Unit)",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "AddVisibilityPermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a visibility permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "init": {
        "isAllowOverride": true,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {},
        "name": "init",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Services can be marked with the `@deploy` decorator. These services are invoked by the build script after installation\nwhen using the `deploy` task.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "RemoveAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 2
          }
        },
        "name": "RemoveAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove an alert for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetLocationAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetLocationAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a location alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "LOCATION",
          "ordinal": 0
        }
      },
      "GetMashups": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetMashups",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the mashups related to this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Mashups",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "MashupList"
          },
          "description": "Mashups",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetEventSubscriptions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetEventSubscriptions",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the events that are bound to the remote Thing",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EdgeThingEventNotification"
          },
          "description": "The subscribed events for the Remote Thing",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetRunTimePermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetRunTimePermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned runtime permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Permission list",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "AddDynamicSubscription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "eventName": {
            "name": "eventName",
            "aspects": {},
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "thingName": {
            "name": "thingName",
            "aspects": {},
            "description": "Thing name",
            "baseType": "THINGNAME",
            "ordinal": 0
          },
          "serviceName": {
            "name": "serviceName",
            "aspects": {},
            "description": "Local service name",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "AddDynamicSubscription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a dynamic subscription",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Subscriptions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetIntegerAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetIntegerAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a numeric alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "INTEGER",
          "ordinal": 0
        }
      },
      "GetIncomingLocalPropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetIncomingLocalPropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get incoming local bindings to this thing for the given property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "IncomingLocalPropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetValueStream": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {
              "thingShape": "ValueStream"
            },
            "description": "Value stream name",
            "baseType": "THINGNAME",
            "ordinal": 0
          }
        },
        "name": "SetValueStream",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the value stream for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "DataLogging",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "RemoveServiceDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Service name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveServiceDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove a service definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetLongAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetLongAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a long alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "LONG",
          "ordinal": 0
        }
      },
      "AddStringValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "STRING",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddStringValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPropertyValues": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetPropertyValues",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property values for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property values",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetLocalPropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetLocalPropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "LocalPropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetAlertSummary": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 2
          },
          "onlyUnacknowledged": {
            "name": "onlyUnacknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only unacknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 1
          },
          "onlyAcknowledged": {
            "name": "onlyAcknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only acknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 0
          }
        },
        "name": "GetAlertSummary",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get alert summary status",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "Status",
          "aspects": {
            "dataShape": "AlertSummary"
          },
          "description": "Alert status",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryAlertSummary": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 3
          },
          "onlyUnacknowledged": {
            "name": "onlyUnacknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only unacknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 0
          },
          "onlyAcknowledged": {
            "name": "onlyAcknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only acknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 1
          }
        },
        "name": "QueryAlertSummary",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Query the alert summary",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AlertSummary"
          },
          "description": "Alert Summary",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetLocationAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "LOCATION",
            "ordinal": 3
          }
        },
        "name": "SetLocationAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a location alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetLongPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetLongPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "LONG",
          "ordinal": 0
        }
      },
      "GetReportingStrategy": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {},
        "name": "GetReportingStrategy",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Retrieves this Thing's reporting strategy",
        "isPrivate": false,
        "sourceName": "Reportable",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Name of the Strategy Thing",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "AddPropertyTransformDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "logged": {
            "name": "logged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Log property value",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "description": {
            "name": "description",
            "aspects": {
              "defaultValue": ""
            },
            "description": "Property description",
            "baseType": "STRING",
            "ordinal": 1
          },
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 3
          },
          "propertyTransformConfig": {
            "name": "propertyTransformConfig",
            "aspects": {
              "dataShape": "FieldValuePair"
            },
            "description": "Infotable of key/value pairs that configure the desired property transform calculation. The available keys can be found in the help center documentation.",
            "baseType": "INFOTABLE",
            "ordinal": 6
          },
          "timeout": {
            "name": "timeout",
            "aspects": {
              "defaultValue": 0
            },
            "description": "Request timeout",
            "baseType": "INTEGER",
            "ordinal": 5
          }
        },
        "name": "AddPropertyTransformDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a property transform definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetEventDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category to filter on",
            "baseType": "STRING",
            "ordinal": 0
          },
          "dataShape": {
            "name": "dataShape",
            "aspects": {},
            "description": "Data shape to filter on if InfoTable base type",
            "baseType": "DATASHAPENAME",
            "ordinal": 1
          }
        },
        "name": "GetEventDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current event definitions for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EventDefinition"
          },
          "description": "Event definitions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetThingTemplate": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetThingTemplate",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the thing template for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Thing Template",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryNamedPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 1
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyNames": {
            "name": "propertyNames",
            "aspects": {
              "dataShape": "EntityList"
            },
            "description": "Property names",
            "baseType": "INFOTABLE",
            "ordinal": 0
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryNamedPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Queries the value stream entries for specified logged property value along with filter and sort criteria and normalizes the data set to display result for a given time range",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetPropertyValues": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {},
            "description": "Property values",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "SetPropertyValues",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a subset of the current property values for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetAnomalyAlertTrainingStatisticsForProperty": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAnomalyAlertTrainingStatisticsForProperty",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get AnomalyAlert Training Statistics for given Property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AnomalyAlertTrainingStatistics"
          },
          "description": "Training Statistics of all AnomalyAlerts on the Property",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueryIntegerPropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryIntegerPropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "IntegerValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "ProcessRemoteEvents": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {
              "dataShape": "RemoteEvent"
            },
            "description": "Collection of events to be dispatched",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "ProcessRemoteEvents",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Process remote events",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Updates",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "DisableThing": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "DisableThing",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Disable this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Lifecycle",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPropertyDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetPropertyDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property definitions for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "PropertyDefinition"
          },
          "description": "Property definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddThingCodeValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "THINGCODE",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddThingCodeValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetAlertSummaryForProperty": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 3
          },
          "onlyUnacknowledged": {
            "name": "onlyUnacknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only unacknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "onlyAcknowledged": {
            "name": "onlyAcknowledged",
            "aspects": {
              "defaultValue": false
            },
            "description": "Show only acknowledged alerts",
            "baseType": "BOOLEAN",
            "ordinal": 1
          }
        },
        "name": "GetAlertSummaryForProperty",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get alert summary for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "AlertSummary",
          "aspects": {
            "dataShape": "PropertyAlertSummary"
          },
          "description": "Alert summary",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetPropertyTime": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetPropertyTime",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the timestamp for a specific property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "Time",
          "aspects": {},
          "description": "Time value",
          "baseType": "DATETIME",
          "ordinal": 0
        }
      },
      "AddVec2ValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "VEC2",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddVec2ValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetIncomingLocalPropertyBindings": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetIncomingLocalPropertyBindings",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get all things and their properties that have local bindings on this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "IncomingLocalPropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetAvatarURL": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetAvatarURL",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get avatar image url",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Entity avatar URL",
          "baseType": "IMAGELINK",
          "ordinal": 0
        }
      },
      "AddImageValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "IMAGE",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddImageValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPropertyDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "category": {
            "name": "category",
            "aspects": {},
            "description": "Category to filter on",
            "baseType": "STRING",
            "ordinal": 0
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Type to filter on",
            "baseType": "BASETYPENAME",
            "ordinal": 1
          },
          "dataShape": {
            "name": "dataShape",
            "aspects": {},
            "description": "Data shape to filter on if InfoTable base type",
            "baseType": "DATASHAPENAME",
            "ordinal": 2
          }
        },
        "name": "GetPropertyDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property definitions for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "PropertyDefinition"
          },
          "description": "Property definitions",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "remoteService": {
        "isAllowOverride": true,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {},
        "name": "remoteService",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Remote services are specified via `@remoteService` decorator. Just like with properties, only the first parameter\nof this decorator is required.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetSummaryInformation": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetSummaryInformation",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get summary information",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "Summary",
          "aspects": {
            "dataShape": "EntitySummary"
          },
          "description": "Summary information",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "UpdateSubscribedPropertyValues": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {
              "dataShape": "NamedVTQ"
            },
            "description": "Collection of properties to be updated",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "UpdateSubscribedPropertyValues",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Write subscribed property values for a connected thing",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Updates",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "QueryThingCodePropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryThingCodePropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "ThingCodeDataShape"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "RemoveRemoteEventBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "eventName": {
            "name": "eventName",
            "aspects": {
              "isRequired": true
            },
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveRemoteEventBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove the remote event binding for a event",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetOutgoingDependenciesAsNetwork": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxDepth": {
            "name": "maxDepth",
            "aspects": {
              "defaultValue": 10.0
            },
            "description": "Maximum depth to traverse",
            "baseType": "NUMBER",
            "ordinal": 1
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          }
        },
        "name": "GetOutgoingDependenciesAsNetwork",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the outgoing dependencies as a network",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityNetwork"
          },
          "description": "Related entities",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetLocalAlertDefinitions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetLocalAlertDefinitions",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get local alert definitions for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "AlertDefinitions",
          "aspects": {
            "dataShape": "AlertDefinition"
          },
          "description": "Alert definition",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetAlertStatusesForProperty": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetAlertStatusesForProperty",
        "aspects": {
          "dataShape": "AlertStatus"
        },
        "isLocalOnly": true,
        "description": "Get the Statuses of the given Alerts",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Status of all Alerts on the Property",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetNumberAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetNumberAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a numeric alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "NUMBER",
          "ordinal": 0
        }
      },
      "GetAllAnomalyAlertTrainingStatistics": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetAllAnomalyAlertTrainingStatistics",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get All AnomalyAlert Training Statistics on this Thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "AnomalyAlertTrainingStatistics"
          },
          "description": "AnomalyAlert Training Statistics on this Thing",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetPropertyQuality": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetPropertyQuality",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the quality for a specific property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "Quality",
          "aspects": {},
          "description": "Quality value",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "UpdateProjectDependencies": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "UpdateProjectDependencies",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Updates Project's 'dependends-on Projects' by scanning current entity's external dependencies",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Projects",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetInstanceMetadataWithPermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetInstanceMetadataWithPermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the instance metadata in JSON format",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Instance metadata",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "SetReportingStrategy": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {
          "strategyThing": {
            "name": "strategyThing",
            "aspects": {
              "isRequired": true,
              "thingTemplate": "ReportingStrategy"
            },
            "description": "Name of the Strategy Thing",
            "baseType": "THINGNAME",
            "ordinal": 0
          }
        },
        "name": "SetReportingStrategy",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Set this Thing's reporting strategy",
        "isPrivate": false,
        "sourceName": "Reportable",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetVisibilityPermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetVisibilityPermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a list of assigned visibility permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Permission list",
          "baseType": "JSON",
          "ordinal": 0
        }
      },
      "GetIncomingDependenciesAsNetwork": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxDepth": {
            "name": "maxDepth",
            "aspects": {
              "defaultValue": 10.0
            },
            "description": "Maximum depth to traverse",
            "baseType": "NUMBER",
            "ordinal": 1
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          }
        },
        "name": "GetIncomingDependenciesAsNetwork",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the incoming dependencies as a network",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityNetwork"
          },
          "description": "Related entities",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "HasAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "HasAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an alert is defined for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Has alert definition",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "RemoveEventDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemoveEventDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove a event definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetRunTimePermissionsAsJSON": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "permissions": {
            "name": "permissions",
            "aspects": {},
            "description": "Permissions in JSON format",
            "baseType": "JSON",
            "ordinal": 0
          }
        },
        "name": "SetRunTimePermissionsAsJSON",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a list of assigned runtime permissions",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "EnableSubscription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "subscriptionName": {
            "name": "subscriptionName",
            "aspects": {},
            "description": "Subscription name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "EnableSubscription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Enable Subscription",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Subscriptions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetLastModifiedDate": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetLastModifiedDate",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the date edit was last modified",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Editing",
        "resultType": {
          "name": "lastModifiedDate",
          "aspects": {},
          "description": "Last modified date",
          "baseType": "DATETIME",
          "ordinal": 0
        }
      },
      "QueryDateTimePropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryDateTimePropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "DateTimeValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetRemoteEventBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "sourceEventName": {
            "name": "sourceEventName",
            "aspects": {},
            "description": "Source event name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "eventName": {
            "name": "eventName",
            "aspects": {
              "isRequired": true
            },
            "description": "Event name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetRemoteEventBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the remote event binding for a event",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "EnableAlertsForProperty": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 2
          }
        },
        "name": "EnableAlertsForProperty",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Enable alert(s) for a property. Specify alertName for a specific property alert; otherwise, all alerts are enabled.",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetStringAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetStringAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a string alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "DeleteConfigurationTableRows": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {},
            "description": "Configuration table rows to modify",
            "baseType": "INFOTABLE",
            "ordinal": 1
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "DeleteConfigurationTableRows",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete one or more rows from a multi-row configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "RemovePropertyDefinition": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RemovePropertyDefinition",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Remove a property definition",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetConfigurationTableRows": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "values": {
            "name": "values",
            "aspects": {},
            "description": "Configuration table rows to modify",
            "baseType": "INFOTABLE",
            "ordinal": 1
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": true
            },
            "description": "Persist these changes",
            "baseType": "BOOLEAN",
            "ordinal": 2
          },
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetConfigurationTableRows",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Update/add one or more rows in a multi-row configuration table",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SetStringAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "STRING",
            "ordinal": 3
          }
        },
        "name": "SetStringAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a string alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "AddDesignTimePermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "allow": {
            "name": "allow",
            "aspects": {},
            "description": "Permission (true = allow, false = deny)",
            "baseType": "BOOLEAN",
            "ordinal": 3
          },
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of user or group)",
            "baseType": "STRING",
            "ordinal": 1
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type (Create, Read, Update, Delete)",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (User or Group)",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "AddDesignTimePermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Add a design time permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "CheckPermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "name": {
            "name": "name",
            "aspects": {},
            "description": "Name of the resource (i.e. property, service, event) to check",
            "baseType": "STRING",
            "ordinal": 1
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "CheckPermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Check to see if an entity has a specific run time permission for the current user",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "True/false based on if the user has the specified permission",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "SetDateTimeAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          },
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Make it persistent",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Parameter value",
            "baseType": "DATETIME",
            "ordinal": 3
          }
        },
        "name": "SetDateTimeAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set a date alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetBooleanAlertParameter": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "property": {
            "name": "property",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "parameterName": {
            "name": "parameterName",
            "aspects": {},
            "description": "Parameter name",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "GetBooleanAlertParameter",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a boolean alert parameter",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "value",
          "aspects": {},
          "description": "Alert parameter value",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetEffectiveLocalPropertyBindings": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetEffectiveLocalPropertyBindings",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the effective local property bindings",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "LocalPropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "QueuePostCommitEvent": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "eventName": {
            "name": "eventName",
            "aspects": {},
            "description": "Event Name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "QueuePostCommitEvent",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Queue events to be executed in a post commit action",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queueing",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetDescription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetDescription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the description for an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "description",
          "aspects": {},
          "description": "description",
          "baseType": "STRING",
          "ordinal": 0
        }
      },
      "DisableAllAlerts": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "persistent": {
            "name": "persistent",
            "aspects": {
              "defaultValue": false
            },
            "description": "Persist this change",
            "baseType": "BOOLEAN",
            "ordinal": 0
          }
        },
        "name": "DisableAllAlerts",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Disable all alerts for a thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetLocationPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetLocationPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "LOCATION",
          "ordinal": 0
        }
      },
      "GetNamedPropertyValuesVTQ": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyNames": {
            "name": "propertyNames",
            "aspects": {
              "dataShape": "EntityList"
            },
            "description": "Property names",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "GetNamedPropertyValuesVTQ",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property values for this thing as VTQ",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {
            "isMultiRow": "false"
          },
          "description": "Property values",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "HasIncomingDependencies": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "HasIncomingDependencies",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Has incoming dependencies",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Dependencies",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Has dependencies",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "GetTunnelNames": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingShape",
        "parameterDefinitions": {},
        "name": "GetTunnelNames",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get a list of Tunnel names registered at the edge",
        "isPrivate": false,
        "sourceName": "Tunneling",
        "category": "Tunneling",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EntityList"
          },
          "description": "Tunnel names",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetNamedPropertyValuesVTQA": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyNames": {
            "name": "propertyNames",
            "aspects": {
              "dataShape": "EntityList"
            },
            "description": "Property names",
            "baseType": "INFOTABLE",
            "ordinal": 0
          }
        },
        "name": "GetNamedPropertyValuesVTQA",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a subset of the current property values (VTQ) and the highest alert for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {
            "isMultiRow": "false"
          },
          "description": "Property values VTQA",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "AddInfoTableValueStreamEntry": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "value": {
            "name": "value",
            "aspects": {},
            "description": "Data value",
            "baseType": "INFOTABLE",
            "ordinal": 2
          },
          "timestamp": {
            "name": "timestamp",
            "aspects": {},
            "description": "Event time (optional)",
            "baseType": "DATETIME",
            "ordinal": 0
          }
        },
        "name": "AddInfoTableValueStreamEntry",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Add a new stream entry",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "StreamEntries",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetVec4PropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetVec4PropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "VEC4",
          "ordinal": 0
        }
      },
      "SetAvatar": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "content": {
            "name": "content",
            "aspects": {},
            "description": "Base 64 Encoded Content",
            "baseType": "IMAGE",
            "ordinal": 0
          }
        },
        "name": "SetAvatar",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Set the avatar icon for the entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetOwner": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetOwner",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get an owner to this entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "User name",
          "baseType": "USERNAME",
          "ordinal": 0
        }
      },
      "QueryInfoTablePropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "flatten": {
            "name": "flatten",
            "aspects": {
              "defaultValue": false
            },
            "description": "Flatten the result",
            "baseType": "BOOLEAN",
            "ordinal": 6
          },
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryInfoTablePropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "InfoTableValueStream"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetProjectName": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "projectName": {
            "name": "projectName",
            "aspects": {},
            "description": "Project name",
            "baseType": "PROJECTNAME",
            "ordinal": 0
          }
        },
        "name": "SetProjectName",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Set the project name of this entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Projects",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "RetrainAlert": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "alertName": {
            "name": "alertName",
            "aspects": {},
            "description": "Alert name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "RetrainAlert",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Retrain an Anomaly Alert",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Alerts",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPropertyLogging": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetPropertyLogging",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get property logging status for a specific property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "DataLogging",
        "resultType": {
          "name": "status",
          "aspects": {},
          "description": "Property logging status",
          "baseType": "BOOLEAN",
          "ordinal": 0
        }
      },
      "QueryVec3PropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "oldestFirst": {
            "name": "oldestFirst",
            "aspects": {},
            "description": "Search/sort from oldest to newest",
            "baseType": "BOOLEAN",
            "ordinal": 4
          },
          "maxItems": {
            "name": "maxItems",
            "aspects": {
              "defaultValue": 500.0
            },
            "description": "Maximum number of items to return",
            "baseType": "NUMBER",
            "ordinal": 0
          },
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 1
          },
          "query": {
            "name": "query",
            "aspects": {},
            "description": "Query definition",
            "baseType": "QUERY",
            "ordinal": 5
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 2
          }
        },
        "name": "QueryVec3PropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Query stream entries, along with filter and sort criteria",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Queries",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "Vec3DataShape"
          },
          "description": "Table entries",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "SetDescription": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "description": {
            "name": "description",
            "aspects": {},
            "description": "Description for an entity",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "SetDescription",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Overwrite/set the description for an entity",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetConfigurationTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "tableName": {
            "name": "tableName",
            "aspects": {},
            "description": "Configuration table name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetConfigurationTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get a specific configuration table as an InfoTable",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Configuration",
        "resultType": {
          "name": "table",
          "aspects": {},
          "description": "table",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "DeleteDesignTimePermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of user or group)",
            "baseType": "STRING",
            "ordinal": 1
          },
          "type": {
            "name": "type",
            "aspects": {},
            "description": "Permission type",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (User or Group)",
            "baseType": "STRING",
            "ordinal": 2
          }
        },
        "name": "DeleteDesignTimePermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete a design time permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "SendMaxQueuedTasks": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "maxCount": {
            "name": "maxCount",
            "aspects": {},
            "description": "The maximum number of messages desired by the edge device.",
            "baseType": "INTEGER",
            "ordinal": 0
          }
        },
        "name": "SendMaxQueuedTasks",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Sends up to a specific maximum number of queued tasks to the connected thing.",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Queueing",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "The number of queued tasks sent, up to maxCount.",
          "baseType": "INTEGER",
          "ordinal": 0
        }
      },
      "GetRemoteServiceBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "serviceName": {
            "name": "serviceName",
            "aspects": {
              "isRequired": true
            },
            "description": "Service name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetRemoteServiceBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the remote service binding for a service",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "RemoteServiceBinding"
          },
          "description": "Service binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "PurgePropertyHistory": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "endDate": {
            "name": "endDate",
            "aspects": {},
            "description": "End time",
            "baseType": "DATETIME",
            "ordinal": 2
          },
          "immediate": {
            "name": "immediate",
            "aspects": {
              "defaultValue": false
            },
            "description": "Delete immediately",
            "baseType": "BOOLEAN",
            "ordinal": 3
          },
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          },
          "startDate": {
            "name": "startDate",
            "aspects": {},
            "description": "Start time",
            "baseType": "DATETIME",
            "ordinal": 1
          }
        },
        "name": "PurgePropertyHistory",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Purge stream entries for a specified date range",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Maintenance",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "DeleteVisibilityPermission": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "principal": {
            "name": "principal",
            "aspects": {},
            "description": "Principal name (name of organization or organization unit)",
            "baseType": "STRING",
            "ordinal": 0
          },
          "principalType": {
            "name": "principalType",
            "aspects": {},
            "description": "Principal type (Organization or Organization Unit)",
            "baseType": "STRING",
            "ordinal": 1
          }
        },
        "name": "DeleteVisibilityPermission",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Delete a visibility permission",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Permissions",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "result",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "GetPropertyValuesVTQA": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetPropertyValuesVTQA",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property values (VTQ) and the highest alert for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {
            "isMultiRow": "false"
          },
          "description": "Property values VTQA",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetIntegerPropertyValue": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetIntegerPropertyValue",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property value",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property value",
          "baseType": "INTEGER",
          "ordinal": 0
        }
      },
      "GetPropertySubscriptions": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "options": {
            "name": "options",
            "aspects": {},
            "description": "Binding options supported by the calling SDK",
            "baseType": "JSON",
            "ordinal": 0
          }
        },
        "name": "GetPropertySubscriptions",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Get the properties plus data change type and data change threshold for the edge Thing",
        "isPrivate": false,
        "sourceName": "RemoteThing",
        "category": "Metadata",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "EdgeThingPropertyNotification"
          },
          "description": "The subscribed properties for the Remote Thing",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetEffectiveLocalPropertyBinding": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {
          "propertyName": {
            "name": "propertyName",
            "aspects": {},
            "description": "Property name",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "GetEffectiveLocalPropertyBinding",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the effective local property binding for a property",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Bindings",
        "resultType": {
          "name": "result",
          "aspects": {
            "dataShape": "LocalPropertyBinding"
          },
          "description": "Property binding",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      },
      "GetPropertyValuesAsMultiRowTable": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "ThingPackage",
        "parameterDefinitions": {},
        "name": "GetPropertyValuesAsMultiRowTable",
        "aspects": {},
        "isLocalOnly": true,
        "description": "Get the current property values for this thing",
        "isPrivate": false,
        "sourceName": "ConfiguredThing",
        "category": "Properties",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "Property values",
          "baseType": "INFOTABLE",
          "ordinal": 0
        }
      }
    }
  },
  "enabled": "true",
  "effectiveRemoteEventBindings": {
    "remoteEvent": {
      "name": "remoteEvent",
      "sourceName": "remoteEvent"
    }
  },
  "implementedShapes": {
    "Tunneling": {
      "name": "Tunneling",
      "type": "ThingShape"
    }
  },
  "effectiveThingPackage": "RemoteThing",
  "effectiveRemotePropertyBindings": {
    "remotelyBoundProperty": {
      "name": "remotelyBoundProperty",
      "pushThreshold": 0.0,
      "aspects": {
        "startType": "useDefaultValue"
      },
      "sourceName": "test",
      "foldType": "NONE",
      "timeout": 0
    }
  },
  "effectiveImplementedShapes": {
    "RemoteMetadataBrowsing": {
      "name": "RemoteMetadataBrowsing",
      "type": "ThingShape"
    },
    "Connectable": {
      "name": "Connectable",
      "type": "ThingShape"
    },
    "Reportable": {
      "name": "Reportable",
      "type": "ThingShape"
    },
    "Tunneling": {
      "name": "Tunneling",
      "type": "ThingShape"
    },
    "Remotable": {
      "name": "Remotable",
      "type": "ThingShape"
    }
  },
  "effectiveRemoteServiceBindings": {
    "remoteService": {
      "name": "remoteService",
      "sourceName": "remoteService",
      "enableQueue": true,
      "timeout": 0
    }
  },
  "configurationTables": {
    "ReportingConfiguration": {
      "isMultiRow": false,
      "name": "ReportingConfiguration",
      "description": "Reporting Settings",
      "rows": [
        {
          "reportingStrategy": "AlwaysOnReporting"
        }
      ],
      "dataShapeName": "",
      "ordinal": 0,
      "dataShape": {
        "fieldDefinitions": {
          "reportingStrategy": {
            "name": "reportingStrategy",
            "aspects": {
              "isReadOnly": false,
              "defaultValue": "NotReporting",
              "isPrimaryKey": true,
              "thingTemplate": "ReportingStrategy"
            },
            "description": "Strategy to determine health",
            "baseType": "THINGNAME",
            "ordinal": 1
          }
        }
      }
    }
  },
  "owner": {
    "name": "SuperUser",
    "type": "User"
  },
  "identifier": "",
  "visibilityPermissions": {
    "Visibility": []
  },
  "lastModifiedDate": 1640364526698,
  "homeMashup": "",
  "avatar": "",
  "published": true,
  "effectiveLocalPropertyBindings": {
    "locallyBoundProperty": {
      "name": "locallyBoundProperty",
      "aspects": {},
      "sourceThingName": "AuditArchiveCleanupScheduler",
      "sourceName": "Enabled"
    }
  },
  "remoteEventBindings": {
    "remoteEvent": {
      "name": "remoteEvent",
      "sourceName": "remoteEvent"
    }
  },
  "tags": [],
  "remotePropertyBindings": {
    "remotelyBoundProperty": {
      "name": "remotelyBoundProperty",
      "pushThreshold": 0.0,
      "aspects": {
        "startType": "useDefaultValue"
      },
      "sourceName": "test",
      "foldType": "NONE",
      "timeout": 0
    }
  },
  "thingShape": {
    "propertyDefinitions": {
      "myProperty": {
        "sourceType": "Unknown",
        "name": "myProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": "This is the default value",
          "isPersistent": true,
          "isLogged": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Thing properties are specified as regular class properties.\nNote that a type annotation is required and can be one of the standard\nTypescript types or Thingworx base types (e.g. `STRING` instead of `string`).\n\nAspects such as `persistent` and `logged` are specified as decorators.\nThe `readonly` aspect is specified via the regular `readonly` keyword.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "remotelyBoundProperty": {
        "sourceType": "Unknown",
        "name": "remotelyBoundProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "isRemote": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Remotely bound properties are specified via the \n`@remote(name, {cacheTime?, pushType?, pushThreshold?, startType?,foldType?, imeout?})` decorator. From this decorator only\nthe first parameter is required. It represents the name of the remote property.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "bytes": {
        "sourceType": "Unknown",
        "name": "bytes",
        "aspects": {
          "minimumValue": 32.0,
          "dataChangeThreshold": 0.0,
          "dataChangeType": "VALUE",
          "units": "bytes",
          "maximumValue": 64.0,
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Numeric properties can use some specific decorators such as `minimumValue`, `maximumValue` and `unit`.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "numberProperty": {
        "sourceType": "Unknown",
        "name": "numberProperty",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "isPersistent": true,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "For certain types, it is possible to use the standard TypeScript type\nnames such as `number`, `string`, `boolean` and `Date` and they will be\nconverted into the appropriate Thingworx type.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "cardType": {
        "sourceType": "Unknown",
        "name": "cardType",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": "Clubs",
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "We can constrain strings to enum values on the compiler side. The ThingWorx type\n(ie. `STRING` not `string`) must be used when constraining properties like this.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "locallyBoundProperty": {
        "sourceType": "Unknown",
        "name": "locallyBoundProperty",
        "aspects": {
          "isReadOnly": true,
          "dataChangeThreshold": 0.0,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Properties that don't have a default value must be implicitly unwrapped.\n\nLocal bindings are specified using the `@local(source, sourceProperty)` decorator, where:\n - The first parameter is the name of the source thing.\n - The second parameter is the name of the property to bind to.",
        "sourceName": "",
        "category": "",
        "baseType": "STRING",
        "ordinal": 0
      },
      "status": {
        "sourceType": "Unknown",
        "name": "status",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "defaultValue": 2.0,
          "dataChangeType": "VALUE",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "Number types can be constrained in the same way as strings. The ThingWorx type\n(ie. `NUMBER` not `number`) must be used when constraining properties like this.",
        "sourceName": "",
        "category": "",
        "baseType": "NUMBER",
        "ordinal": 0
      },
      "streamToUse": {
        "sourceType": "Unknown",
        "name": "streamToUse",
        "aspects": {
          "dataChangeThreshold": 0.0,
          "dataChangeType": "ALWAYS",
          "thingTemplate": "Stream",
          "cacheTime": 0.0
        },
        "isLocalOnly": false,
        "description": "The data change type is specified via the `@dataChangeType(type)` decorator.\n\nNote that some base types are generics in TypeScript. THINGNAME is such as a base type; it takes two type arguments:\n - The first argument is the thing template name or `undefined`. If specified, this must be a string literal or the `undefined` keyword.\n - The second argument is the thing shape name or `undefined`. If specified, this must be a string literal or the `undefined` keyword.",
        "sourceName": "",
        "category": "",
        "baseType": "THINGNAME",
        "ordinal": 0
      }
    },
    "subscriptions": {
      "streamToUseChanged": {
        "sourceType": "Thing",
        "alertName": "",
        "name": "streamToUseChanged",
        "sourceProperty": "streamToUse",
        "serviceImplementation": {
          "name": "streamToUseChanged",
          "description": "",
          "handlerName": "Script",
          "configurationTables": {
            "Script": {
              "isMultiRow": false,
              "name": "Script",
              "description": "Script",
              "rows": [
                {
                  "code": "\n    var table = Resources.InfoTableFunctions.CreateInfoTableFromDataShape({ dataShapeName: 'LinkedList' });\n    table.AddRow({ name: 'EntityCount' });\n    var table2 = Resources.InfoTableFunctions.Clone({ t1: table });\n    logger.info(\"Name is \".concat(table2.name));\n"
                }
              ],
              "dataShapeName": "",
              "ordinal": 0,
              "dataShape": {
                "fieldDefinitions": {
                  "code": {
                    "name": "code",
                    "aspects": {},
                    "description": "code",
                    "baseType": "STRING",
                    "ordinal": 0
                  }
                }
              }
            }
          }
        },
        "aspects": {},
        "description": "The `@localSubscription(event[, property])` decorator is used to create subscription to an entity's own events.",
        "eventName": "DataChange",
        "source": "",
        "trigger": "",
        "enabled": true
      },
      "auditDataTableThingTemplateChanged": {
        "sourceType": "Thing",
        "alertName": "",
        "name": "auditDataTableThingTemplateChanged",
        "sourceProperty": "thingTemplate",
        "serviceImplementation": {
          "name": "auditDataTableThingTemplateChanged",
          "description": "",
          "handlerName": "Script",
          "configurationTables": {
            "Script": {
              "isMultiRow": false,
              "name": "Script",
              "description": "Script",
              "rows": [
                {
                  "code": "\n    // Const enums will be fully erased in thingworx\n    // This condition will be compiled as this.status == 0\n    if (me.status == 0) {\n        logger.debug('Thing is running');\n    }\n"
                }
              ],
              "dataShapeName": "",
              "ordinal": 0,
              "dataShape": {
                "fieldDefinitions": {
                  "code": {
                    "name": "code",
                    "aspects": {},
                    "description": "code",
                    "baseType": "STRING",
                    "ordinal": 0
                  }
                }
              }
            }
          }
        },
        "aspects": {},
        "description": "The `@subscription(name, event[, property])` decorator is used to create subscriptions to other entities' events.\n\nNote that in this case, the name of the parameters used by this method cannot be changed or it will lead to runtime errors.",
        "eventName": "DataChange",
        "source": "AuditDataTable",
        "trigger": "",
        "enabled": true
      }
    },
    "eventDefinitions": {
      "remoteEvent": {
        "sourceType": "Unknown",
        "name": "remoteEvent",
        "aspects": {},
        "description": "Remote events are specified via the `@remoteEvent(name)` decorator.",
        "sourceName": "",
        "category": "",
        "dataShape": "GenericStringList"
      },
      "customEvent": {
        "sourceType": "Unknown",
        "name": "customEvent",
        "aspects": {},
        "description": "Events are just properties with the custom `EVENT` base type. The data shape to use is specified as\na type argument.",
        "sourceName": "",
        "category": "",
        "dataShape": "GenericStringList"
      }
    },
    "serviceImplementations": {
      "init": {
        "name": "init",
        "description": "",
        "handlerName": "Script",
        "configurationTables": {
          "Script": {
            "isMultiRow": false,
            "name": "Script",
            "description": "Script",
            "rows": [
              {
                "code": "var result = (function () {\n    me.cardType = \"Diamonds\";\n    // In addition to using const enums, any environment variables referenced will also be replaced by their values by the transformer\n    logger.debug(\"Deployment finished on \".concat(\"http://localhost:8015\"));\n    logger.debug(\"The value of my custom variable is \".concat(\"Test\"));\n})()"
              }
            ],
            "dataShapeName": "",
            "ordinal": 0,
            "dataShape": {
              "fieldDefinitions": {
                "code": {
                  "name": "code",
                  "aspects": {},
                  "description": "code",
                  "baseType": "STRING",
                  "ordinal": 0
                }
              }
            }
          }
        }
      },
      "asyncService": {
        "name": "asyncService",
        "description": "",
        "handlerName": "Script",
        "configurationTables": {
          "Script": {
            "isMultiRow": false,
            "name": "Script",
            "description": "Script",
            "rows": [
              {
                "code": "var result = (function () {\n    // `this` should be used in place of `me`, unlike in thingworx\n    // it will be compiled into `me`\n    var x = Things[me.streamToUse];\n    // Constrained strings will cause a compiler error whenever anything other than\n    // an enum constant is assigned to it\n    me.cardType = \"Clubs\";\n    // The numeric or string literal can be used directly instead of the enum member\n    me.status = 2;\n    me.streamToUse = 'AnomalyMonitorStateStream';\n    var data = x.QueryStreamEntriesWithData();\n    var y = Things.DownloadedSolutions;\n    y.AnyAlertAck();\n    me.customEvent({ item: 'test' });\n    me.asyncService({ stringParameter: 'test' });\n})()"
              }
            ],
            "dataShapeName": "",
            "ordinal": 0,
            "dataShape": {
              "fieldDefinitions": {
                "code": {
                  "name": "code",
                  "aspects": {},
                  "description": "code",
                  "baseType": "STRING",
                  "ordinal": 0
                }
              }
            }
          }
        }
      }
    },
    "serviceMappings": {},
    "serviceDefinitions": {
      "init": {
        "isAllowOverride": true,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {},
        "name": "init",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Services can be marked with the `@deploy` decorator. These services are invoked by the build script after installation\nwhen using the `deploy` task.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "asyncService": {
        "isAllowOverride": false,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {
          "infoTable": {
            "name": "infoTable",
            "aspects": {
              "isRequired": false,
              "dataShape": "GenericStringList"
            },
            "description": "",
            "baseType": "INFOTABLE",
            "ordinal": 0
          },
          "stringParameter": {
            "name": "stringParameter",
            "aspects": {
              "isRequired": true,
              "defaultValue": "Parameter default value"
            },
            "description": "",
            "baseType": "STRING",
            "ordinal": 0
          }
        },
        "name": "asyncService",
        "aspects": {
          "isAsync": true
        },
        "isLocalOnly": false,
        "description": "Services created through this project are marked overridable as default. Use the `@final` decorator to make a service non-overridable.\n\nUse the `async` keyword to mark a service async. You cannot specify a return type in this case. Note that you cannot use the\n`await` keyword in these services as the `async` modifier is erased at runtime.\n\nService parameters must be specified as a destructured object like in the example below.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      },
      "remoteService": {
        "isAllowOverride": true,
        "isOpen": false,
        "sourceType": "Unknown",
        "parameterDefinitions": {},
        "name": "remoteService",
        "aspects": {},
        "isLocalOnly": false,
        "description": "Remote services are specified via `@remoteService` decorator. Just like with properties, only the first parameter\nof this decorator is required.",
        "isPrivate": false,
        "sourceName": "",
        "category": "",
        "resultType": {
          "name": "result",
          "aspects": {},
          "description": "",
          "baseType": "NOTHING",
          "ordinal": 0
        }
      }
    }
  },
  "runTimePermissions": {
    "permissions": [
      {
        "EventSubscribe": [],
        "PropertyWrite": [],
        "PropertyRead": [],
        "ServiceInvoke": [],
        "resourceName": "*",
        "EventInvoke": []
      }
    ]
  },
  "documentationContent": "",
  "propertyBindings": {
    "locallyBoundProperty": {
      "name": "locallyBoundProperty",
      "aspects": {},
      "sourceThingName": "AuditArchiveCleanupScheduler",
      "sourceName": "Enabled"
    }
  },
  "name": "MyThing",
  "alertConfigurations": {},
  "configurationTableDefinitions": {},
  "projectName": "ExampleProject",
  "thingProperties": {
    "reportingLastEvaluation": {
      "value": 0,
      "timestamp": 0,
      "quality": "UNKNOWN"
    },
    "myProperty": {
      "value": "This is the default value",
      "timestamp": 0,
      "quality": "UNKNOWN"
    },
    "numberProperty": {
      "value": 0.0,
      "timestamp": 0,
      "quality": "UNKNOWN"
    },
    "reportingLastChange": {
      "value": 0,
      "timestamp": 0,
      "quality": "UNKNOWN"
    },
    "lastConnection": {
      "value": 0,
      "timestamp": 0,
      "quality": "UNKNOWN"
    }
  },
  "inheritedValueStream": ""
}